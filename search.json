[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Methodology for the Fiscal Futures Annual Report",
    "section": "",
    "text": "Background Information\nWhile the main purpose of this site is documenting methodology used in the Fiscal Futures Annual Report, it also contains useful information on Illinois budget variables used by the Illinois Office of the Comptroller (IOC) that may be valuable to other researchers. Frequently discussed topics (e.g. Pensions, Debt, Federal Revenue Sources, Medicaid, etc.) each have their own section on this site dedicated to looking at the many relevant variables for that topic, even if the budget variables are not directly included while calculating the Fiscal Gap for the Fiscal Futures Annual Report.\nThis website was originally created by Alea Wilbur-Mujtaba as an internal document for Fiscal Futures researchers to increase reproducibility and update the methodology documentation used for the Fiscal Futures Annual Report. Until August 2022, The FF Annual Report was calculated using Stata code and documentation that had been passed on for years and modified in a piece-meal fashion. AWM translated the Stata files into a very long Rmarkdown file before transitioning to a Github Page with downloadable public data. She also created the method for comparing funds/agencies/revenue sources in current and past fiscal years, identified the important data values and code relevant for various fiscal topics, and coded all files associated with creating this website. The methodology for selecting funds to include in the Fiscal Gap calculation and tracking them over time was created by David Merriman and Richard Dye and updated with the help of many PhD researchers since 2008.\nNote from Alea Wilbur-Mujtaba: This document is a good faith effort to increase reproducibility and transparency for both the Fiscal Futures Annual Report and Illinois budget data as a whole. I recognized that the time and effort spent on identifying variables and graphing fiscal topics could be valuable to other researchers and took the initiative to create this page and repository from the documents I inherited as an IGPA Research Assistant. This endeavor has had a sharp learning curve and I could easily have made mistakes along the way. This is a working document and small edits are made to the site frequently. I intend to document major changes with new repository releases.\nYou can read the FY22 Fiscal Futures Annual Report here: Recovering from a (COVID) Spending Fever\nTo learn more about the history of the Fiscal Futures Project and read past reports, please visit The Fiscal Futures webpage. The Fiscal Future Project is one of many research projects within the University of Illinois’ Institute of Government and Public Affairs (IGPA).",
    "crumbs": [
      "About",
      "Background Information"
    ]
  },
  {
    "objectID": "index.html#github-data-notes-and-organization",
    "href": "index.html#github-data-notes-and-organization",
    "title": "Methodology for the Fiscal Futures Annual Report",
    "section": "Github Data Notes and Organization",
    "text": "Github Data Notes and Organization\nThe authors and IGPA believe that these novel datasets will be valuable to other researchers interested in Illinois’ finances.\n\nOriginal files as they were received from FOIA requests is in the data/DATA_RAW folder. The version of the files used in the analysis and to create this website are in the data/DATA_DTA folder. The files within these folders are before cleaning or recoding the data. Most of the files for individual years are saved as .dta files due to using Stata before FY21.\nallexp_fy23_recoded.csv and allrev_fy23_recoded are probably the best for any researchers trying to use this data in their own projects.\n\nCleanest version of data before aggregating totals or dropping observations not included in the Fiscal Futures fiscal gap calculation. All years in one file. Funds and agencies should have numbers and consistent labels. Includes the “Group” variable used in the FF Annual Report used for calculating expenditures by function. To do: Add group names to go with group number code. Done after pivoting and merging in normal Fiscal Gap calculation code.\nCreated in February 2023. Still checking accuracy. AWM made this version of the data specifically for other researchers. The normal work flow for the Annual Report involves dropping observations gradually while cleaning and coding the data. Significant changes to the code used for the Annual Report were made to create a new dataset that attempts to keep all Illinois budget observations that have been consistently coded over time with the additional descriptive variables used by Fiscal Futures researchers. Again, I cannot guarantee the accuracy of this file but the original data and code for cleaning the data is available to get you started.\n\n\nexp_temp and rev_temp\n\nUsed in fiscal gap calculation. Data is cleaned and coded up to the point right before aggregating category totals. Drops observations we do not keep in fiscal gap calculation.\n\nA summary file containing aggregated yearly expenditure and revenue values for categories used in the Fiscal Futures model can be found in the summary_file_FY2023.xlsx excel file. This excel file also contains additional tabs for all CAGR values calculated as well as the yearly change between the most recent fiscal year and the previous fiscal year. All tables included in the Annual Report are in the summary file.\nThe Annual Report is part of Fiscal Futures project associated with the University of Illinois System Institute of Government and Policy Affairs (IGPA). Creating the R code, Github folder, and website for methodology was done by Alea Wilbur-Mujtaba. Any errors with code or findings are the fault of the author, not the research institute. Data is originally from annual FOIA requests to the Illinois Office of the Comptroller.",
    "crumbs": [
      "About",
      "Background Information"
    ]
  },
  {
    "objectID": "Everything_notrounded.html",
    "href": "Everything_notrounded.html",
    "title": "1  Calculating the Fiscal Gap - Rounded Output",
    "section": "",
    "text": "1.1 Modify Expenditure File",
    "crumbs": [
      "About",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap - Rounded Output</span>"
    ]
  },
  {
    "objectID": "Everything_notrounded.html#modify-expenditure-file",
    "href": "Everything_notrounded.html#modify-expenditure-file",
    "title": "1  Calculating the Fiscal Gap - Rounded Output",
    "section": "",
    "text": "1.1.1 Tax refunds\nAggregate expenditures: Save tax refunds as negative revenue. Code refunds to match the rev_type codes (02=income taxes, 03 = corporate income taxes, 06=sales tax, 09=motor fuel tax, 24=insurance taxes and fees, 35 = all other tax refunds).\n\n\nCode\n## negative revenue becomes tax refunds\n\ntax_refund_long &lt;- exp_temp %&gt;%           # fund != \"0401\" # removes State Trust Funds\n  filter(fund != \"0401\" & \n                              (object ==\"9900\" |    # one-time abatements in FY23\n                                 object==\"9910\"|object==\"9921\"|object==\"9923\"|object==\"9925\")) %&gt;%\n  # keeps these objects which represent revenue, insurance, treasurer,and financial and professional reg tax refunds\n  mutate(refund = case_when(\n                        object == \"9900\" ~ \"FY23Abatements\",\n\n    fund==\"0278\" & sequence == \"00\" ~ \"02\", # for income tax refund\n    fund==\"0278\" & sequence == \"01\" ~ \"03\", # tax administration and enforcement and tax operations become corporate income tax refund\n     fund == \"0278\" & sequence == \"02\" ~ \"02\",\n    object==\"9921\" ~ \"21\",                # inheritance tax and estate tax refund appropriation\n    object==\"9923\" ~ \"09\",                # motor fuel tax refunds\n    obj_seq_type == \"99250055\" ~ \"06\",    # sales tax refund\n    fund==\"0378\" & object==\"9925\" ~ \"24\", # insurance privilege tax refund\n   (fund==\"0001\" & object==\"9925\") | (object==\"9925\" & fund == \"0384\" & fy == 2023) ~ \"35\", # all other taxes\n   # fund==\"0001\" & object==\"9925\" ~ \"35\", # all other taxes\n      T ~ \"CHECK\"))                       # if none of the items above apply to the observations, then code them as CHECK \n\n    \nexp_temp &lt;- left_join(exp_temp, tax_refund_long) %&gt;%\n  mutate(refund = ifelse(is.na(refund),\"not refund\", as.character(refund)))\n\ntax_refund &lt;- tax_refund_long %&gt;% \n  group_by(refund, fy)%&gt;%\n  summarize(refund_amount = sum(expenditure, na.rm = TRUE)/1000000) %&gt;%\n  pivot_wider(names_from = refund, values_from = refund_amount, names_prefix = \"ref_\") %&gt;%\n  mutate_all(~replace_na(.,0)) %&gt;%\n  arrange(fy)\n\ntax_refund %&gt;% \n  pivot_longer( ref_02:ref_35, names_to = \"Refund Type\", values_to = \"Amount\") %&gt;%\n  ggplot()+\n  theme_classic()+\n  geom_line(aes(x=fy,y=Amount, group = `Refund Type`, color = `Refund Type`))+\n  labs(title = \"Refund Types\", \n       caption = \"Refunds are excluded from Expenditure totals and instead subtracted from Revenue totals\") + \n  labs(title = \"Tax refunds\", \n       caption = \"Rev_type codes: 02=income taxes, 03=corporate income taxes, 06=sales tax, 09=motor fuel tax, \n       24=insurance taxes and fees, 35 = all other tax refunds.\" )\n\n# remove the items we recoded in tax_refund_long\nexp_temp &lt;- exp_temp %&gt;% filter(refund == \"not refund\")\n\n\n\n\n\nFigure 1.1: Tax Refunds\n\n\n\n\n\n\n\n\nIdeally the money going in and out of the funds used for refunds would be approximately equal. If equal, would drop from Fiscal Futures analysis so that Revenue reflects the amount of money the state gets to keep (and the local portion that becomes the local govt transfer).\nFor FY23, the one-time abatement, object 9900, is included as an expenditure item within the Department of Revenue.\n\n\nCode\n# manually adds the abatements as expenditure item and keeps on expenditure side.\n# otherwise ignored since it is in fund 0278 and \nexp_temp &lt;- exp_temp %&gt;%\n  mutate(in_ff = ifelse(object == 9900, 1, in_ff))\n\n\n\n\n1.1.2 Pension Expenditures\nState pension contributions are largely captured with object=4431. (State payments into pension fund). State payments to the following pension systems:\n\nTeachers Retirement System (TRS)\nNew POB bond in 2019: Accelerated Bond Fund paid benefits in advance as lump sum\nState Employee Retirement System (SERS)\nState University Retirement System (SURS)\nJudges Retirement System (JRS)\nGeneral Assembly Retirement System (GARS)\n\nModify exp_temp and move all state pension contributions to their own group (901). For more information on the variables included or excluded, please see ?sec-pensions.\n\n\nCode\nexp_temp &lt;-  exp_temp %&gt;% \n  arrange(fund) %&gt;%\n  mutate(pension = case_when( \n    (object==\"4431\") ~ 1, # 4431 = easy to find pension payments INTO fund\n    \n    # (object&gt;\"1159\" & object&lt;\"1166\") & fund != \"0183\" & fund != \"0193\"   ~ 2, \n    # objects 1159 to 1166 are all considered Retirement by Comptroller, \n    # Excluded - employer contributions from agencies/organizations/etc.\n    \n    (object==\"1298\" &  # Purchase of Investments, Normally excluded\n       (fy==2010 | fy==2011) & \n       (fund==\"0477\" | fund==\"0479\" | fund==\"0481\")) ~ 3, #judges retirement OUT of fund\n    # state borrowed money from pension funds to pay for core services during 2010 and 2011. \n    # used to fill budget gap and push problems to the future. \n    \n    fund == \"0319\" ~ 4, # pension stabilization fund\n    TRUE ~ 0) )\n\ntable(exp_temp$pension) \n\n\n\n     0      1      3      4 \n237470    242      6     15 \n\n\nCode\nexp_temp %&gt;% \n  filter(pension != 0) %&gt;%\n  mutate(pension = as.factor(pension))%&gt;%\n  group_by(fy, pension) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x=fy, y = expenditure, group=pension)) + \n  theme_classic()+\n  geom_col(aes(fill = pension)) + \n\n  labs (title = \"Pension expenditures\", \n  caption = \"1 = State contributions INTO pension funds. \n  3 = Purchase of Investments anomoly in 2010 and 2011. \n  4 = pension stabilization fund\")+\n    theme(legend.position = \"bottom\")\n\n\n\n\n\nFigure 1.2: Pensions\n\n\n\n\n\n\n\n\n\n\nCode\n# special accounting of pension obligation bond (POB)-funded contributions to JRS, SERS, GARS, TRS \n\nexp_temp &lt;- exp_temp %&gt;% \n  # change object for 2010 and 2011, retirement expenditures were bond proceeds and would have been excluded\n  mutate(object = ifelse((pension &gt;0 & in_ff == \"0\"), \"4431\", object)) %&gt;% \n  # changes weird teacher & judge retirement system  pensions object to normal pension object 4431\n  mutate(pension =  ifelse(pension &gt;0 & in_ff == \"0\", 6, pension)) %&gt;% # coded as 6 if it was supposed to be excluded. \n  mutate(in_ff = ifelse(pension&gt;0, \"1\", in_ff))\n\ntable(exp_temp$pension) \n\n\n\n     0      1      4      6 \n237470    240     15      8 \n\n\nCode\n# all other pensions objects  codes get agency code 901 for State Pension Contributions\nexp_temp &lt;- exp_temp %&gt;% \n  mutate(agency = ifelse(pension&gt;0, \"901\", as.character(agency)),\n         agency_name = ifelse(agency == \"901\", \"State Pension Contributions\", as.character(agency_name)))\n\nexp_temp %&gt;% \n filter(pension &gt; 0) %&gt;%  \n  mutate(pension = as.factor(pension)) %&gt;%\n  group_by(fy, pension) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %&gt;%\n  ggplot(aes(x=fy, y=expenditure, color = pension)) +\n  geom_line() + \n  theme_classic()+\n  labs (title = \"Pension Expenditures\", \n  caption = \"\")\n\nexp_temp %&gt;% \n filter(pension &gt; 0) %&gt;%  \n  group_by(fy) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %&gt;%\n  ggplot(aes(x=fy, y=expenditure)) +\n  geom_line() + \n  theme_classic()+\n  labs (title = \"Pension Expenditures\")\n\n\n\n\n\nFigure 1.3: Pension Expenditures\n\n\n\n\n\n\n\n\n\n\n\nFigure 1.4: Pension Expenditures\n\n\n\n\n\n\n\n\n\n\n1.1.3 Drop Interfund transfers\nDrop all cash transfers between funds, statutory transfers, and purchases of investments from expenditure data.\n\nobject == 1993 is for interfund cash transfers\nagency == 799 is for statutory transfers\nobject == 1298 is for purchase of investments and is not spending EXCEPT for costs in 2010 and 2011 (and were recoded already to object == “4431”). Over 168,000 observations remain.\n\n153,889 observations on 1/23/2022?\n\n\n\n\nCode\ntransfers_drop &lt;- exp_temp %&gt;% filter(\n  agency == \"799\" | # statutory transfers\n           object == \"1993\" |  # interfund cash transfers\n           object == \"1298\") # purchase of investments\ntransfers_drop # items being dropped, \n\n\n\n  \n\n\n\nCode\n# always check to make sure you aren't accidently dropping something of interest.\n\nexp_temp &lt;- anti_join(exp_temp, transfers_drop)\nexp_temp\n\n\n\n  \n\n\n\n\n\n1.1.4 State employee healthcare costs\nCoding healthcare costs was quite difficult. Over the years, State employee healthcare has been within Central Management Bureau of Benefits and Healthcare & Family Services.\nIf observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis).\nAgency 416 had group insurance contributions for 1998-2005 and 2013-present. Agency 478 had group insurance contributions from 2006-2012.\nFY2021 and FY2022 contributions coded with object = 1900 (lump sum) for some reason??\n\n\nCode\n#if observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis)\n\n# pretend eehc is named group_insurance_contribution or something like that\n# eehc coded as zero implies that it is group insurance\n# if eehc=0, then expenditures are coded as zero for group insurance to avoid double counting costs\n\n\nexp_temp &lt;- exp_temp %&gt;% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 0, 1) )%&gt;% \n  \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" \n    & appr_org==\"80\", 0, eehc) )%&gt;%\n    \n   # group insurance contributions from road fund\n  # coded with 1900 for some reason??\n    mutate(eehc = ifelse(\n      fund == \"0011\" & object == \"1900\" & \n        agency == \"416\" & appr_org==\"20\", 0, eehc) ) %&gt;%\n  \n  mutate(expenditure = ifelse(eehc==\"0\", 0, expenditure)) %&gt;%\n  \n  mutate(agency = case_when(   # turns specific items into State Employee Healthcare (agency=904)\n      fund==\"0907\" & (agency==\"416\" & appr_org==\"20\") ~ \"904\",   # central management Bureau of benefits using health insurance reserve \n      fund==\"0907\" & (agency==\"478\" & appr_org==\"80\") ~ \"904\",   # agency = 478: healthcare & family services using health insurance reserve - stopped using this in 2012\n      TRUE ~ as.character(agency))) %&gt;%\n  mutate(agency_name = ifelse(\n    agency == \"904\", \"STATE EMPLOYEE HEALTHCARE\", as.character(agency_name)),\n         in_ff = ifelse( agency == \"904\", 1, in_ff),\n         group = ifelse(agency == \"904\", \"904\", as.character(agency)))  \n# creates group variable\n\n# Default group = agency number\n\nhealthcare_costs &lt;- exp_temp %&gt;% filter(group == \"904\")\n\nhealthcare_costs\n\n\n\n  \n\n\n\nCode\nexp_temp %&gt;% \n  filter(group == \"904\") %&gt;% \n  group_by(fy) %&gt;% \n  summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)) %&gt;% \n  ggplot() +\n  geom_line(aes(x=fy, y=healthcare_cost)) + \n  labs(title=\"State Employee Healthcare Costs - Included in Fiscal Futures Model\", \n       caption = \"Fund 0907 for agencies responsible for health insurance reserve (DHFS & CMS)\")\n\n\n\n\n\n\n\n\n\nCode\n#exp_temp &lt;- anti_join(exp_temp, healthcare_costs) %&gt;% mutate(expenditure = ifelse(object == \"1180\", 0, expenditure))\n\n#healthcare_costs_yearly &lt;- healthcare_costs %&gt;% group_by(fy, group) %&gt;% summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)/1000000) %&gt;% select(-group)\n\n\n\n\n1.1.5 Local Transfers\nSeparate transfers to local from parent agencies that come from DOR(492) or Transportation (494). Treats muni revenue transfers as expenditures, not negative revenue.\nThe share of certain taxes levied state-wide at a common rate and then transferred to local governments. (Purely local-option taxes levied by specific local governments with the state acting as collection agent are NOT included.)\nThe six corresponding revenue items are:\n\nLocal share of Personal Income Tax\n\nIndividual Income Tax Pass-Through New 2021 (source 2582).\n\nLocal share of General Sales Tax\nPersonal Property Replacement Tax on Business Income\nPersonal Property Replacement Tax on Public Utilities\nLocal share of Motor Fuel Tax\nTransportation Renewal Fund 0952\n\nUntil Dec 18. 2022, Local CURE was being aggregated into Revenue totals since the agency was the Department of Revenue. However the $371 million expenditure is for “LOC GOVT ARPA” and the revenue source that is Local CURE is also $371 million. Since it cancels out and is just passed through the state government, I am changing changing the fund_ab_in file so that in_ff=0 for the Local CURE fund. It also inflates the department of revenue expenditures in a misleading way when the expense is actually a transfer to local governments.\n\nDropping Local CURE fund from analysis results in a $371 million decrease in the department of Revenue (where the Local Government ARPA transfer money). The appropriation for it was over $740 million so some will probably be rolled over to FY23 too.\n\nIn the FY21 New and Reused Funds word document, 0325 Local CURE is described as “Created as a federal trust fund. The fund is established to receive transfers from either the disaster response and recovery fund or the state cure fund of federal funds received by the state. These transfers, subject to appropriation, will provide for the administration and payment of grants and expense reimbursements to units of local government. Revenues should be under Federal Other and expenditures under Commerce and Economic Opportunity.” - I propose changing it to exclude for both.\n\n\n\nCode\nexp_temp &lt;- exp_temp %&gt;% mutate(\n  agency = case_when(fund==\"0515\" & object==\"4470\" & type==\"08\" ~ \"971\", # income tax to local governments\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"00\" ~ \"971\", # object is shared revenue payments\n                     fund==\"0802\" & object==\"4491\" ~ \"972\", #pprt transfer\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"01\" ~ \"976\", #gst to local\n                     fund==\"0627\" & object==\"4472\"~ \"976\" , # public transportation fund but no observations exist\n                     fund==\"0648\" & object==\"4472\" ~ \"976\", # downstate public transportation, but doesn't exist\n                     fund==\"0515\" & object==\"4470\" & type==\"00\" ~ \"976\", # object 4470 is grants to local governments\n                    object==\"4491\" & (fund==\"0188\"|fund==\"0189\") ~ \"976\",\n                     fund==\"0187\" & object==\"4470\" ~ \"976\",\n                     fund==\"0186\" & object==\"4470\" ~ \"976\",\n                    object==\"4491\" & (fund==\"0413\"|fund==\"0414\"|fund==\"0415\")  ~ \"975\", #mft to local\n                  fund == \"0952\"~ \"975\", # Added Sept 29 2022 AWM. Transportation Renewal MFT\n                    TRUE ~ as.character(agency)),\n  \n  agency_name = case_when(agency == \"971\"~ \"INCOME TAX 1/10 TO LOCAL\",\n                          agency == \"972\" ~ \"PPRT TRANSFER TO LOCAL\",\n                          agency == \"975\" ~ \"MFT TO LOCAL\",\n                          agency == \"976\" ~ \"GST TO LOCAL\",\n                          TRUE~as.character(agency_name)),\n  group = ifelse(agency&gt;\"970\" & agency &lt; \"977\", as.character(agency), as.character(group)))\n\n\n\n\nCode\ntransfers_long &lt;- exp_temp %&gt;% \n  filter(group == \"971\" |group == \"972\" | group == \"975\" | group == \"976\")\n\ntransfers_long %&gt;% \n  group_by(agency_name, group, fy) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE) )%&gt;% \n  ggplot() + \n  geom_line(aes(x=fy, y = expenditure, color=agency_name)) + \n  theme_classic()+\n  theme(legend.position = \"bottom\", legend.title=element_blank())+\n  labs(title = \"Transfers to Local Governments\", \n       caption = \"Data Source: Illinois Office of the Comptroller\")\n\ntransfers &lt;- transfers_long %&gt;%\n  group_by(fy, group ) %&gt;%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\", names_prefix = \"exp_\" )\n\nexp_temp &lt;- anti_join(exp_temp, transfers_long)\n\n\ndropped_inff_0 &lt;- exp_temp %&gt;% filter(in_ff == 0)\n\nexp_temp &lt;- exp_temp %&gt;% filter(in_ff == 1) # drops in_ff = 0 funds AFTER dealing with net-revenue above\n\n\n\n\n\nFigure 1.5: Drop Transfers from State to Local Governments\n\n\n\n\n\n\n\n\nThe Local Transfers from the Personal Property Replacement Tax (fund 802) increased over $2 billion from corporate income taxes alone. Personal property replacement taxes (PPRT) are revenues collected by the state of Illinois and paid to local governments to replace money that was lost by local governments when their powers to impose personal property taxes on corporations, partnerships, and other business entities were taken away.\n\n\n1.1.6 Debt Service\nDebt Service expenditures include interest payment on both short-term and long-term debt. We do not include escrow or principal payments.\nDecision from Sept 30 2022: We are no longer including short term principal payments as a cost; only interest on borrowing is a cost. Pre FY22 and the FY21 correction, we did include an escrow payment and principle payments as costs but not bond proceeds as revenues. This caused expenditures to be inflated because we were essentially counting debt twice - the principle payment and whatever the money was spent on in other expenditure categories, which was incorrect.\n\n\nCode\ndebt_drop &lt;- exp_temp %&gt;% \n  filter(object == \"8841\" |  object == \"8811\")  \n# escrow  OR  principle\n\n#debt_drop %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy)\n\n\ndebt_keep &lt;- exp_temp %&gt;% \n  filter(fund != \"0455\" & (object == \"8813\" | object == \"8800\" )) \n# examine the debt costs we want to include\n\n#debt_keep %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy) \n\n\nexp_temp &lt;- anti_join(exp_temp, debt_drop) \nexp_temp &lt;- anti_join(exp_temp, debt_keep)\n\ndebt_keep &lt;- debt_keep %&gt;%\n  mutate(\n    agency = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(agency)),\n    group = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(group)),\n    in_ff = ifelse(group == \"903\", 1, as.character(in_ff)))\n\ndebt_keep_yearly &lt;- debt_keep %&gt;% group_by(fy, group) %&gt;% summarize(debt_cost = sum(expenditure,na.rm=TRUE)/1000000) %&gt;% select(-group)\n\n\n\n\n1.1.7 Medicaid\nMedicaid. That portion of the Healthcare and Family Services (or Public Aid in earlier years, agency code 478) budget for Medical (appr_organization code 65) for awards and grants (object codes 4400 and 4900).\n\nState CURE will remain in the Medicaid expenditure category due to the nature of it being federal funds providing public health services and funding to locations that provide public services.\n\n\nUses same appropriation name of “HEALTHCARE PROVIDER RELIEF” and fund == 0793 and obj_seq_type == 49000000. So can defend the “mistake” of including healthcare provider relief as Medicaid expenditure.\n\n\n\n1.1.8 Add Other Fiscal Future group codes\n\n\nCode\nexp_temp &lt;- exp_temp %&gt;%\n  #mutate(agency = as.numeric(agency) ) %&gt;%\n  # arrange(agency)%&gt;%\n  mutate(\n    group = case_when(\n      agency&gt;\"100\"& agency&lt;\"200\" ~ \"910\", # legislative\n      \n      agency == \"528\"  | (agency&gt;\"200\" & agency&lt;\"300\") ~ \"920\", # judicial\n      pension&gt;0  ~ \"901\", # pensions\n      (agency&gt;\"309\" & agency&lt;\"400\") ~ \"930\",    # elected officers\n      \n      agency == \"586\" ~ \"959\", # create new K-12 group\n\n      agency==\"402\" | agency==\"418\" | agency==\"478\" | agency==\"444\" | agency==\"482\" ~ as.character(agency), # aging, CFS, HFS, human services, public health\n      T ~ as.character(group))\n    ) %&gt;%      \n\n  \n  mutate(group = case_when(\n    agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\") ~ \"945\", # separates CHIP from health and human services and saves it as Medicaid\n    \n    agency == \"586\" & fund == \"0355\" ~ \"945\",  # 586 (Board of Edu) has special education which is part of medicaid\n    \n    # OLD CODE: agency == \"586\" & appr_org == \"18\" ~ \"945\", # Spec. Edu Medicaid Matching\n    \n    agency==\"425\" | agency==\"466\" | agency==\"546\" | agency==\"569\" | agency==\"578\" | agency==\"583\" | agency==\"591\" | agency==\"592\" | agency==\"493\" | agency==\"588\" ~ \"941\", # public safety & Corrections\n    \n    agency==\"420\" | agency==\"494\" |  agency==\"406\" | agency==\"557\" ~ as.character(agency), # econ devt & infra, tollway\n    \n    agency==\"511\" | agency==\"554\" | agency==\"574\" | agency==\"598\" ~ \"946\",  # Capital improvement\n    \n    agency==\"422\" | agency==\"532\" ~ as.character(agency), # environment & nat. resources\n    \n    agency==\"440\" | agency==\"446\" | agency==\"524\" | agency==\"563\"  ~ \"944\", # business regulation\n    \n    agency==\"492\" ~ \"492\", # revenue\n    \n    agency == \"416\" ~ \"416\", # central management services\n    agency==\"448\" & fy &gt; 2016 ~ \"416\", #add DoIT to central management \n    \n    T ~ as.character(group))) %&gt;%\n  \n  \n  mutate(group = case_when(\n    # agency==\"684\" | agency==\"691\"  ~ as.character(agency), # moved under higher education in next line. 11/28/2022 AWM\n    \n    agency==\"692\" | agency==\"695\" | agency == \"684\" |agency == \"691\" | (agency&gt;\"599\" & agency&lt;\"677\") ~ \"960\", # higher education\n    \n    agency==\"427\"  ~ as.character(agency), # employment security\n    \n    agency==\"507\"|  agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ \"948\", # other departments\n    \n    # other boards & Commissions\n    agency==\"503\" | agency==\"509\" | agency==\"510\" | agency==\"565\" |agency==\"517\" | agency==\"525\" | agency==\"526\" | agency==\"529\" | agency==\"537\" | agency==\"541\" | agency==\"542\" | agency==\"548\" |  agency==\"555\" | agency==\"558\" | agency==\"559\" | agency==\"562\" | agency==\"564\" | agency==\"568\" | agency==\"579\" | agency==\"580\" | agency==\"587\" | agency==\"590\" | agency==\"527\" | agency==\"585\" | agency==\"567\" | agency==\"571\" | agency==\"575\" | agency==\"540\" | agency==\"576\" | agency==\"564\" | agency==\"534\" | agency==\"520\" | agency==\"506\" | agency == \"533\" ~ \"949\", \n    \n    # non-pension expenditures of retirement funds moved to \"Other Departments\"\n    # should have removed pension expenditures already from exp_temp in Pensions step above\n    agency==\"131\" | agency==\"275\" | agency==\"589\" |agency==\"593\"|agency==\"594\"|agency==\"693\" ~ \"948\",\n    \n    T ~ as.character(group))) %&gt;%\n\n  mutate(group_name = \n           case_when(\n             group == \"416\" ~ \"Central Management\",\n             group == \"478\" ~ \"Healthcare and Family Services\",\n             group == \"482\" ~ \"Public Health\",\n             group == \"900\" ~ \"NOT IN FRAME\",\n             group == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             group == \"903\" ~ \"DEBT SERVICE\",\n             group == \"910\" ~ \"LEGISLATIVE\"  ,\n             group == \"920\" ~ \"JUDICIAL\" ,\n             group == \"930\" ~ \"ELECTED OFFICERS\" , \n             group == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             group == \"941\" ~ \"PUBLIC SAFETY\" ,\n             group == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             group == \"943\" ~ \"CENTRAL SERVICES\",\n             group == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             group == \"945\" ~ \"MEDICAID\" ,\n             group == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             group == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             group == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             group == \"959\" ~ \"K-12 EDUCATION\" ,\n             group == \"960\" ~ \"UNIVERSITY EDUCATION\" ,\n             group == agency ~ as.character(group),\n             TRUE ~ \"Check name\"),\n         year = fy)\n\nexp_temp %&gt;% filter(group_name == \"Check name\")\n\n\n\n  \n\n\n\nCode\n#write_csv(exp_temp, \"all_expenditures_recoded.csv\")\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAll expenditures recoded but not aggregated: Allows for inspection of individual expenditures within larger categories. This stage of the data is extremely useful for investigating how individual items have been coded before they are aggregated into larger categories.",
    "crumbs": [
      "About",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap - Rounded Output</span>"
    ]
  },
  {
    "objectID": "Everything_notrounded.html#modify-revenue-data",
    "href": "Everything_notrounded.html#modify-revenue-data",
    "title": "1  Calculating the Fiscal Gap - Rounded Output",
    "section": "1.2 Modify Revenue data",
    "text": "1.2 Modify Revenue data\nRevenue Categories NOT included in Fiscal Futures:\n- 32. Garnishment-Levies. (State is fiduciary, not beneficiary.)\n- 45. Student Fees-Universities. (Excluded from state-level budget.)\n- 51. Retirement Contributions (of individuals and non-state entities).\n- 66. Proceeds, Investment Maturities. (Not sustainable flow.)\n- 72. Bond Issue Proceeds. (Not sustainable flow.)\n- 75. Inter-Agency Receipts.\n- 79. Cook County Intergovernmental Transfers. (State is not beneficiary.)\n- 98. Prior Year Refunds.\n- 99. Statutory Transfers.\nAll Other Sources\nExpanded to include the following smaller sources:\n- 30. Horse Racing Taxes & Fees.\n- 60. Other Grants and Contracts.\n- 63. Investment Income.\nFor aggregating revenue, use the rev_1998_2022 dataframe, join the funds_ab_in_2022 file to it, and then join the ioc_source_type file to the dataset. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\n\nCode\n# recodes old agency numbers to consistent agency number\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --&gt; coded as  financial and professional reg\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n\n\n1.2.1 Federal to State Transfers\nFor an deeper look at federal revenue to Illinois, ?sec-covid-federal-funds.\n\n\nCode\n#rev_temp &lt;- rev_temp %&gt;% filter(in_ff==1)\n\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %&gt;% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %&gt;% \n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %&gt;% \n  ggplot() +\n      geom_recessions(xformay = \"numeric\",text = FALSE)+\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\nFigure 1.6\n\n\n\n\n\n\n\n\nDropping State CURE Revenue\nThe Fiscal Futures model focuses on sustainable revenue sources. To understand our fiscal gap and outlook, we need to exclude these one time revenues. GOMB has emphasized that they have allocated COVID dollars to one time expenditures (unemployment trust fund, budget stabilization fund, etc.). The fiscal gap, graphs,and CAGRs have been recalculated in the [Drop COVID Dollars] section below.\n\nNOTE: The code chunk below only drops revenue sources with the source name of “Federal Stimulus Package” (which is the State and Local CURE revenue). Additional federal money went into other funds during the beginning of pandemic. Many departments saw increased grants and received other funds (e.g. funds)\n\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% mutate(covid_dollars = ifelse(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\",1,0))\n\nrev_temp %&gt;% filter(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %&gt;%\n  group_by(fy) %&gt;% summarize(Received = sum(receipts))\n\n\n\n  \n\n\n\n\n\n1.2.2 Health Insurance Premiums from Employees\nInsurance premiums for employees is coded below but it is NOT used in the fiscal futures model. Employee and employer premiums are considered rev_51 and dropped from analysis in later step.\n\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n\nCode\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    #variable not used in aggregates, but could be interesting for other purposes\n    employee_premiums = ifelse(fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source&gt;\"0345\" & source&lt;\"0357\")|(source&gt;\"2199\" & source&lt;\"2209\")), 1, 0),\n    \n    # adds more rev_type codes\n    rev_type = case_when(\n      fund ==\"0427\" ~ \"12\", # pub utility tax\n      fund == \"0742\" | fund == \"0473\" ~ \"24\", # insurance and fees\n      fund == \"0976\" ~ \"36\",# receipts from rev producing\n      fund == \"0392\" |fund == \"0723\" ~ \"39\", # licenses and fees\n      fund == \"0656\" ~ \"78\", #all other rev sources\n      TRUE ~ as.character(rev_type)))\n# if not mentioned, then rev_type as it was\n\n\n\n# # optional insurance premiums = employee insurance premiums\n\n# emp_premium &lt;- rev_temp %&gt;%\n#   group_by(fy, employee_premiums) %&gt;%\n#   summarize(employee_premiums_sum = sum(receipts)/1000000) %&gt;%\n#   filter(employee_premiums == 1) %&gt;%\n#   rename(year = fy) %&gt;% \n#   select(-employee_premiums)\n\nemp_premium_long &lt;- rev_temp %&gt;%  filter(employee_premiums == 1)\n# 381 observations have employee premiums == 1\n\n\n# drops employee premiums from revenue\n# rev_temp &lt;- rev_temp %&gt;% filter(employee_premiums != 1)\n# should be dropped in next step since rev_type = 51\n\n\nNote: In FY21, employee premiums were subtracted from state healthcare costs on the expenditure side to calculate a “Net Healthcare Cost” but that methodology has been discontinued. Totals were practically unchanged: revenue from employee premiums is also very small.\n\n\n1.2.3 Transfers in and Out:\nFunds that hold and disperse local taxes or fees are dropped from the analysis. Then other excluded revenue types are also dropped.\nDrops Blank, Student Fees, Retirement contributions, proceeds/investments, bond issue proceeds, interagency receipts, cook IGT, Prior year refunds:\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% \n  filter(in_ff == 1) %&gt;% \n  mutate(local = ifelse(is.na(local), 0, local)) %&gt;% # drops all revenue observations that were coded as \"local == 1\"\n  filter(local != 1)\n\n# 1175 doesnt exist?\nin_from_out &lt;- c(\"0847\", \"0867\", \"1175\", \"1176\", \"1177\", \"1178\", \"1181\", \"1182\", \"1582\", \"1592\", \"1745\", \"1982\", \"2174\", \"2264\")\n\n# what does this actually include:\n# all are items with rev_type = 75 originally. \nin_out_df &lt;- rev_temp %&gt;%\n  mutate(infromout = ifelse(source %in% in_from_out, 1, 0)) %&gt;%\n  filter(infromout == 1)\n\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(rev_type_new = ifelse(source %in% in_from_out, \"76\", rev_type))\n# if source contains any of the codes in in_from_out, code them as 76 (all other rev).\n# I end up excluding rev_76 in later steps\n\n\n\n\nCode\n# revenue types to drop\ndrop_type &lt;- c(\"32\", \"45\", \"51\", \n               \"66\", \"72\", \"75\", \"76\", \"79\", \"98\", \"99\")\n\n# drops Blank, Student Fees, Retirement contributions, proceeds/investments,\n# bond issue proceeds, interagency receipts, cook IGT, Prior year refunds.\n\n\nrev_temp &lt;- rev_temp %&gt;% filter(!rev_type_new %in% drop_type)\n# keep observations that do not have a revenue type mentioned in drop_type\n\ntable(rev_temp$rev_type_new)\n\n\n\n   02    03    06    09    12    15    18    21    24    27    30    31    33 \n  177   132   852   134   593   269    47  1421   473    79   665   130   141 \n   35    36    39    42    48    54    57    58    59    60    63    78 \n  691  5328  9487  2939    32  1283  6683   646   233   105  5321 11712 \n\n\nCode\nrev_temp %&gt;% \n  group_by(fy, rev_type_new) %&gt;% \n  summarize(total_reciepts = sum(receipts)/1000000) %&gt;%\n  pivot_wider(names_from = rev_type_new, values_from = total_reciepts, names_prefix = \"rev_\") \n\n\n\n  \n\n\n\nCode\n# combines smallest 4  categories to to \"Other\"\n# they were the 4 smallest in past years, are they still the 4 smallest? \n\nrev_temp &lt;- rev_temp %&gt;%  \n mutate(rev_type_new = ifelse(rev_type==\"30\" | rev_type==\"60\" | rev_type==\"63\",  ##  | rev_type==\"76\", # Added 76 to drop_types\n                              \"78\", rev_type_new))\n\n\n#table(rev_temp$rev_type_new)  # check work\n\n\n\nrm(rev_1998_2022)\nrm(exp_1998_2022)\n\n\n#write.csv(exp_temp, \"exp_fy22_recoded_22March2024.csv\")\n#write.csv(rev_temp, \"rev_fy22_recoded_22March2024.csv\")",
    "crumbs": [
      "About",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap - Rounded Output</span>"
    ]
  },
  {
    "objectID": "Everything_notrounded.html#pivoting-and-merging",
    "href": "Everything_notrounded.html#pivoting-and-merging",
    "title": "1  Calculating the Fiscal Gap - Rounded Output",
    "section": "1.3 Pivoting and Merging",
    "text": "1.3 Pivoting and Merging\n\nLocal Government Transfers (exp_970) should be on the expenditure side\n\n\n1.3.1 Revenues\n\n\n\nCode\nff_rev &lt;- rev_temp %&gt;% \n  group_by(rev_type_new, fy) %&gt;% \n  summarize(sum_receipts = sum(receipts, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"rev_type_new\", values_from = \"sum_receipts\", names_prefix = \"rev_\")\n\n# ff_rev&lt;- left_join(ff_rev, tax_refund)\n\n#ff_rev &lt;- left_join(ff_rev, pension2_fy22, by=c(\"fy\" = \"year\"))\n\n#ff_rev &lt;- left_join(ff_rev, eehc2_amt) \nff_rev &lt;- mutate_all(ff_rev, ~replace_na(.,0))\n\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   mutate(rev_02 = rev_02 - ref_02,\n#          rev_03 = rev_03 - ref_03,\n#          rev_06 = rev_06 - ref_06,\n#          rev_09 = rev_09 - ref_09,\n#          rev_21 = rev_21 - ref_21,\n#          rev_24 = rev_24 - ref_24,\n#          rev_35 = rev_35 - ref_35\n# \n#       #   rev_78new = rev_78 #+ pension_amt #+ eehc\n#          ) %&gt;% \n#   select(-c(ref_02:ref_35, rev_99, rev_NA, rev_76\n#             #, ref_CHECK#, pension_amt , rev_76,\n#           #  , eehc\n#             ))\n# \n# ff_rev\n\n\n\n#noproblem &lt;- c(0)  # if ref_CHECK = $0, then there is no problem. :) \n\n# if((sum(ff_rev$ref_CHECK) == 0 )){\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   \n#   mutate(rev_02 = rev_02 - ref_02,\n#          rev_03 = rev_03 - ref_03,\n#          rev_06 = rev_06 - ref_06,\n#          rev_09 = rev_09 - ref_09,\n#          rev_21 = rev_21 - ref_21,\n#          rev_24 = rev_24 - ref_24,\n#          rev_35 = rev_35 - ref_35\n#          ) %&gt;% \n#   select(-c(ref_02:ref_35, rev_99, rev_76, ref_CHECK )) \n# }else{\"You have a problem! Check what revenue items did not have rev codes (causing it to be coded as rev_NA) or the check if there were refunds that were not assigned revenue codes (tax_refunds_long objects)\"}\n\nff_rev %&gt;%  mutate_all(., ~round(.,digits=0))\n\n\n\n\nTable 1.1: Pivoted Revenue Table ($ Millions) - Intermediate Step\n\n\n\n\n  \n\n\n\n\n\n\nSince I already pivot_wider()ed the table in the previous code chunk, I now change each column’s name by using rename() to set new variable names. Ideally the final dataframe would have both the variable name and the variable label but I have not done that yet.\n\n\nCode\naggregate_rev_labels &lt;- ff_rev %&gt;%\n  rename(\"INDIVIDUAL INCOME TAXES, gross of local, net of refunds\" = rev_02,\n         \"CORPORATE INCOME TAXES, gross of PPRT, net of refunds\" = rev_03,\n         \"SALES TAXES, gross of local share\" = rev_06 ,\n         \"MOTOR FUEL TAX, gross of local share, net of refunds\" = rev_09 ,\n         \"PUBLIC UTILITY TAXES, gross of PPRT\" = rev_12,\n         \"CIGARETTE TAXES\" = rev_15 ,\n         \"LIQUOR GALLONAGE TAXES\" = rev_18,\n         \"INHERITANCE TAX\" = rev_21,\n         \"INSURANCE TAXES&FEES&LICENSES, net of refunds\" = rev_24 ,\n         \"CORP FRANCHISE TAXES & FEES\" = rev_27,\n         # \"HORSE RACING TAXES & FEES\" = rev_30,  # in Other\n         \"MEDICAL PROVIDER ASSESSMENTS\" = rev_31 ,\n         # \"GARNISHMENT-LEVIES \" = rev_32 , # dropped\n         \"LOTTERY RECEIPTS\" = rev_33 ,\n         \"OTHER TAXES\" = rev_35,\n         \"RECEIPTS FROM REVENUE PRODUCNG\" = rev_36, \n         \"LICENSES, FEES & REGISTRATIONS\" = rev_39 ,\n         \"MOTOR VEHICLE AND OPERATORS\" = rev_42 ,\n         # \"STUDENT FEES-UNIVERSITIES\" = rev_45,   # dropped\n         \"RIVERBOAT WAGERING TAXES\" = rev_48 ,\n         # \"RETIREMENT CONTRIBUTIONS \" = rev_51, # dropped\n         \"GIFTS AND BEQUESTS\" = rev_54, \n         \"FEDERAL OTHER\" = rev_57 ,\n         \"FEDERAL MEDICAID\" = rev_58, \n         \"FEDERAL TRANSPORTATION\" = rev_59 ,\n         # \"OTHER GRANTS AND CONTRACTS\" = rev_60, #other\n         # \"INVESTMENT INCOME\" = rev_63, # other\n         # \"PROCEEDS,INVESTMENT MATURITIES\" = rev_66 , #dropped\n         # \"BOND ISSUE PROCEEDS\" = rev_72,  #dropped\n         # \"INTER-AGENCY RECEIPTS\" = rev_75,  #dropped\n         # \"TRANSFER IN FROM OUT FUNDS\" = rev_76,  #other\n         \"ALL OTHER SOURCES\" = rev_78,\n         # \"COOK COUNTY IGT\" = rev_79, #dropped\n         # \"PRIOR YEAR REFUNDS\" = rev_98 #dropped\n  ) \n\naggregate_rev_labels %&gt;% mutate_all(., ~round(., digits = 0))\n\n\n\n\nTable 1.2: Aggregated Revenue Categories ($ Millions), with old labels\n\n\n\n\n  \n\n\n\n\n\n\n\n\n1.3.2 Expenditures\nCreate exp_970 for all local government transfers (exp_971 + exp_972 + exp_975 + exp_976).\n\n\nCode\nff_exp &lt;- exp_temp %&gt;% \n  group_by(fy, group) %&gt;% \n  summarize(sum_expenditures = sum(expenditure, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditures\", names_prefix = \"exp_\")%&gt;%\n  \n    left_join(debt_keep_yearly) %&gt;%\n  mutate(exp_903 = debt_cost) %&gt;%\n\n  #  left_join(healthcare_costs_yearly) %&gt;%\n\n  # join state employee healthcare and subtract employee premiums\n  # left_join(emp_premium, by = c(\"fy\" = \"year\")) %&gt;%\n#  mutate(exp_904_new = (`healthcare_cost` - `employee_premiums_sum`)) %&gt;% # state employee healthcare premiums\n  \n # left_join(retirement_contributions) %&gt;%\n  #    mutate(exp_901_new = exp_901 - contributions/1000000) %&gt;% #employee pension contributions\n\n\n  # join local transfers and create exp_970\n  left_join(transfers) %&gt;%\n  mutate(exp_970 = exp_971 + exp_972  + exp_975 + exp_976)\n\nff_exp&lt;- ff_exp %&gt;% \n  select(-c(debt_cost, exp_971:exp_976)) # drop unwanted columns\n\nff_exp # not labeled\n\n\n\n\nTable 1.3: Pivoted Expenditure Categories ($ Millions)\n\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\n# exp_temp %&gt;%\n#   group_by(year, group) %&gt;%\n#   summarize(sum_expenditure = round(sum(expenditure)/1000000)) %&gt;%\n#   arrange(year) %&gt;%\n#   pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\")\n# \n\naggregate_exp_labeled &lt;- exp_temp %&gt;%\n  group_by(year, group_name) %&gt;%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %&gt;%\n  arrange(year) %&gt;%\n  pivot_wider(names_from = \"group_name\", values_from = \"sum_expenditure\")\n\naggregate_exp_labeled %&gt;% mutate_all(., ~round(., digits = 0))\n\n\n\n\nTable 1.4: Final Expenditure Categories, with Fiscal Futures Grouped Expenditure Categories",
    "crumbs": [
      "About",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap - Rounded Output</span>"
    ]
  },
  {
    "objectID": "Everything_notrounded.html#summary-tables---largest-categories",
    "href": "Everything_notrounded.html#summary-tables---largest-categories",
    "title": "1  Calculating the Fiscal Gap - Rounded Output",
    "section": "3.1 Summary Tables - Largest Categories",
    "text": "3.1 Summary Tables - Largest Categories\nThe 10 largest revenue sources and 15 largest expenditure sources remain separate categories and all other smaller sources/expenditures are combined into “All Other Revenues (Expenditures)”. These condensed tables are typically used in the Fiscal Futures articles. They were manually created in past years but this hopefully automates the process a bit until final formatting stages.\n\ntake ff_rev and ff_exp data frames, which were in wide format, pivot them longer and mutate the Category_name variable to nicer labels. Keep largest categories separate and aggregate the rest.\nYou need to manually comment out the categories that are not the largest each year. Check and compare to the previous years largest categories!\n\n\n\nCode\nexp_totals &lt;- ff_exp %&gt;% rowwise() %&gt;% mutate(exp_TOTALS = sum(across(exp_402:exp_970))) # creates total column too\n\nrev_totals &lt;- ff_rev %&gt;% rowwise() %&gt;%  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long_majorcats &lt;- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy) %&gt;%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"Income Tax\" ,\n    Category == \"03\" ~ \"Corporate Income Tax\" ,\n    Category == \"06\" ~ \"Sales Tax\" ,\n    Category == \"09\" ~ \"Motor Fuel Taxes\" ,\n    #   Category == \"12\" ~ \"PUBLIC UTILITY TAXES, gross of PPRT\" ,\n    #  Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    #   Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    #  Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    #  Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES, net of refunds \" ,\n    # Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    #   Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"Medical Provider Assessments\" ,\n    #  Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    #  Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    # Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"Receipts from Revenue Producing\", \n    Category == \"39\" ~  \"Licenses, Fees, Registration\" ,\n    # Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    #    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    #    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    #  Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    # Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"Federal Other\" ,\n    Category == \"58\" ~  \"Federal Medicaid Reimbursements\", \n    Category == \"59\" ~  \"Federal Transportation\" ,\n    #   Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    #    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    #   Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    #   Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    #   Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    #   Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    # Category == \"78new\" ~  \"ALL OTHER SOURCES\" ,\n    # Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    #   Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\n    \n    Category == \"TOTALS\" ~ \"Total Revenue\",\n    T ~ \"All Other Sources **\" # any other Category number that was not specifically referenced is combined into Other Revenue Sources\n    \n  ) ) %&gt;% \n  select(-type, -Category) %&gt;%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %&gt;%\n  summarise(Dollars= sum(Dollars)) \n\n# revenue_wide # not actually in wide format yet. \n# has 10 largest rev sources separate and combined all others to Other in long data format. \n\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide_majorcats &lt;- rev_long_majorcats %&gt;% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  relocate(\"All Other Sources **\", .after = last_col()) %&gt;%\n  relocate(\"Total Revenue\", .after =  last_col()) \n\n\nexp_long_majorcats &lt;- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy ) %&gt;% \n  mutate(Category_name = \n           case_when(\n          #   Category == \"402\" ~ \"Aging\" ,\n          #  Category == \"406\" ~ \"AGRICULTURE\", \n         #    Category == \"416\" ~ \"Central Management\",\n             Category == \"418\" ~ \"Children & Family Services\", \n             Category == \"420\" ~ \"Community Development\",\n           #  Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"Corrections\",\n           #  Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           #  Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n           #  Category == \"482\" ~ \"PUBLIC HEALTH\", \n             Category == \"492\" ~ \"Revenue\", \n             Category == \"494\" ~ \"Transportation\" ,\n           #  Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n           #  Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n            # Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n           #  Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n           #  Category == \"910\" ~ \"LEGISLATIVE\"  ,\n          #   Category == \"920\" ~ \"JUDICIAL\" ,\n         #   Category == \"930\" ~ \"Elected Officers\" , \n            # Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n           #  Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n           #  Category == \"943\" ~ \"CENTRAL SERVICES\",\n           #  Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n          #   Category == \"946\" ~ \"Capital Improvement\" , \n           #  Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n            # Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n             Category == \"960\" ~ \"University Education\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total Expenditures\",\n             T ~ \"All Other Expenditures **\")\n           ) %&gt;% \n  select(-type, -Category) %&gt;% \n  group_by(Year, Category_name) %&gt;% \n  summarise(Dollars = sum(Dollars))\n\nexpenditure_wide_majorcats &lt;- exp_long_majorcats %&gt;% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  relocate(\"All Other Expenditures **\", .after = last_col()) %&gt;%\n  relocate(\"Total Expenditures\", .after =  last_col())\n\n\n# CAGR values for largest expenditure categories and combined All Other Expenditures\n\n# function for calculating the CAGR\ncalc_cagr &lt;- function(df, n) {\n  df &lt;- exp_long_majorcats %&gt;%\n    #select(-type) %&gt;%\n    arrange(Category_name, Year) %&gt;%\n    group_by(Category_name) %&gt;%\n    mutate(cagr = ((`Dollars` / lag(`Dollars`, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_25 &lt;- calc_cagr(exp_long_majorcats, 25) %&gt;% \n  # group_by(Category) %&gt;%\n  summarize(cagr_25 = sum(cagr*100, na.rm = TRUE))\n\ncagr23_precovid &lt;- exp_long_majorcats %&gt;%\n  filter(Year &lt;= 2019) %&gt;%\n  calc_cagr(21) %&gt;% \n  summarize(cagr_21 = sum(cagr*100, na.rm = TRUE))\n\n\n\ncagr_10 &lt;- calc_cagr(exp_long_majorcats, 10) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_10 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\ncagr_5 &lt;- calc_cagr(exp_long_majorcats, 5) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_5 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\ncagr_3 &lt;- calc_cagr(exp_long_majorcats, 3) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_3 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\ncagr_2 &lt;- calc_cagr(exp_long_majorcats, 2) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_2 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\ncagr_1 &lt;- calc_cagr(exp_long_majorcats, 1) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_1 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\nCAGR_expenditures_majorcats_tot &lt;- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_25 ) %&gt;% \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %&gt;% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"25-Year CAGR\" = cagr_25 )\n\nmove_to_last &lt;- function(df, n) df[c(setdiff(seq_len(nrow(df)), n), n), ]\n\nCAGR_expenditures_majorcats_tot &lt;- move_to_last(CAGR_expenditures_majorcats_tot, 1)\nCAGR_expenditures_majorcats_tot &lt;- move_to_last(CAGR_expenditures_majorcats_tot, 14) \n\n\nCAGR_expenditures_majorcats_tot%&gt;%   \n  kbl(caption = \"CAGR Calculations for Largest Expenditure Categories\" , row.names=FALSE) %&gt;% \n     kable_classic()  %&gt;%\n    row_spec(17, bold = T, color = \"black\", background = \"gray\")\ncurrent_year &lt;- 2023\nlast_year &lt;- 2022\n\n# Yearly change for Top 13 largest expenditure categories\nexpenditure_change_majorcats &lt;- exp_long_majorcats %&gt;%\n  filter(Year &gt; 2021) %&gt;%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %&gt;%\n  mutate(\"FY 2023 ($ Billions)\" = Dollars_2023/1000,\n         \"FY 2022 ($ Billions)\" = Dollars_2022/1000,\n         \"1-Year Change\" = percent((Dollars_2023 -Dollars_2022)/Dollars_2022, accuracy = .1) )  %&gt;%\n  left_join(CAGR_expenditures_majorcats_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %&gt;% \n  arrange(-`FY 2023 ($ Billions)`)%&gt;%\n  mutate(`25-Year CAGR` = percent(`25-Year CAGR`/100, accuracy=.1)) %&gt;%\n  select(-c(Dollars_2023, Dollars_2022, `1 Year CAGR`:`10 Year CAGR`)) %&gt;%\n  rename( \"25-Year CAGR\" = `25-Year CAGR`, \n          \"Expenditure Category\" = Category_name )\n\nexpenditure_change_majorcats &lt;- move_to_last(expenditure_change_majorcats, 4) \n\nexpenditure_change_majorcats &lt;- move_to_last(expenditure_change_majorcats, 1)\n\nexpenditure_change_majorcats %&gt;% \n  kbl(caption = \"Yearly Change in Expenditures\", row.names = FALSE, align = \"l\") %&gt;% \n  kable_classic() %&gt;%\n    row_spec(17, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.3: Largest Expenditure Categories with CAGRs\n\n\n\n\n\nCAGR Calculations for Largest Expenditure Categories\n\n\nExpenditure Category\n1 Year CAGR\n2 Year CAGR\n3 Year CAGR\n5 Year CAGR\n10 Year CAGR\n25-Year CAGR\n\n\n\n\nChildren & Family Services\n25.9859009\n10.034408\n8.4022688\n7.779575\n3.3335986\n0.7765979\n\n\nCommunity Development\n7.7125186\n-5.455029\n34.1826333\n24.627482\n4.3415932\n4.7917662\n\n\nCorrections\n13.4597177\n2.797624\n3.4710988\n-2.649786\n3.1274136\n2.2089231\n\n\nDebt Service\n-2.8871960\n-1.863720\n0.0719999\n-0.196211\n0.7950780\n5.7307260\n\n\nHuman Services\n21.3386342\n16.102528\n13.7662650\n10.186506\n4.6360395\n3.2865014\n\n\nK-12 Education\n9.8602395\n9.863593\n9.1469312\n7.039479\n5.3528615\n4.3478887\n\n\nLocal Govt Revenue Sharing\n5.3563005\n23.232767\n19.0836206\n12.017295\n6.4612497\n4.6775563\n\n\nMedicaid\n13.1042564\n11.051950\n13.2863258\n11.759034\n8.1698752\n7.4322089\n\n\nPublic Safety\n1.1798222\n-6.872019\n5.3743040\n14.124412\n7.5811865\n5.6904569\n\n\nRevenue\n8.0244834\n8.655442\n20.7265417\n30.497037\n17.3094263\n6.3943396\n\n\nState Employee Healthcare\n-0.0947205\n2.077425\n0.2291473\n-12.494408\n3.2765846\n5.8208663\n\n\nState Pension Contribution\n5.0581029\n10.115816\n8.8529994\n9.544734\n9.0593992\n10.5213967\n\n\nTollway\n-9.8915774\n-1.781046\n-0.4137358\n5.234151\n7.1403223\n6.7795355\n\n\nTransportation\n16.2873535\n-2.947142\n7.2008605\n6.916665\n1.5888433\n3.8039280\n\n\nUniversity Education\n12.5185792\n7.495333\n5.0065012\n4.602954\n0.9849009\n0.8145729\n\n\nAll Other Expenditures **\n14.3814813\n6.631452\n8.0225787\n6.795808\n4.1600353\n5.6683239\n\n\nTotal Expenditures\n10.8130927\n9.153814\n10.6713228\n8.090953\n5.7434221\n5.1891345\n\n\n\n\n\n\n\n\n\n\nYearly Change in Expenditures\n\n\nExpenditure Category\nFY 2023 ($ Billions)\nFY 2022 ($ Billions)\n1-Year Change\n25-Year CAGR\n\n\n\n\nMedicaid\n32.406413\n28.651806\n13.1%\n7.4%\n\n\nK-12 Education\n14.697912\n13.378737\n9.9%\n4.3%\n\n\nLocal Govt Revenue Sharing\n10.901300\n10.347080\n5.4%\n4.7%\n\n\nHuman Services\n8.829551\n7.276784\n21.3%\n3.3%\n\n\nState Pension Contribution\n6.818033\n6.489774\n5.1%\n10.5%\n\n\nTransportation\n5.029310\n4.324898\n16.3%\n3.8%\n\n\nState Employee Healthcare\n3.002363\n3.005209\n-0.1%\n5.8%\n\n\nUniversity Education\n2.549872\n2.266179\n12.5%\n0.8%\n\n\nRevenue\n1.981667\n1.834461\n8.0%\n6.4%\n\n\nDebt Service\n1.951437\n2.009453\n-2.9%\n5.7%\n\n\nTollway\n1.893930\n2.101834\n-9.9%\n6.8%\n\n\nPublic Safety\n1.741655\n1.721346\n1.2%\n5.7%\n\n\nCorrections\n1.704290\n1.502111\n13.5%\n2.2%\n\n\nChildren & Family Services\n1.577760\n1.252331\n26.0%\n0.8%\n\n\nCommunity Development\n1.498420\n1.391129\n7.7%\n4.8%\n\n\nAll Other Expenditures **\n13.989088\n12.230203\n14.4%\n5.7%\n\n\nTotal Expenditures\n110.573000\n99.783336\n10.8%\n5.2%\n\n\n\n\n\n\n\n\n\n\n\nTop 10 revenue sources CAGRs and Yearly Change Tables:\n\n\nCode\n##### Top 10 revenue CAGRs: ####\n\n\ncalc_cagr &lt;- function(df, n) {\n  df &lt;- rev_long_majorcats %&gt;%\n    arrange(Category_name, Year) %&gt;%\n    group_by(Category_name) %&gt;%\n    mutate(cagr = ((Dollars / lag(Dollars, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_25 &lt;- calc_cagr(rev_long_majorcats, 25) %&gt;% \n     # group_by(Category) %&gt;%\n  summarize(cagr_25 = sum(cagr*100, na.rm = TRUE))\n\ncagr_10 &lt;- calc_cagr(rev_long_majorcats, 10) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_10 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\ncagr_5 &lt;- calc_cagr(rev_long_majorcats, 5) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_5 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\ncagr_3 &lt;- calc_cagr(rev_long_majorcats, 3) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_3 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\ncagr_2 &lt;- calc_cagr(rev_long_majorcats, 2) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_2 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\n cagr_1 &lt;- calc_cagr(rev_long_majorcats, 1) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_1 = case_when(Year == 2023 ~ sum(cagr*100, na.rm = TRUE)))\n\nCAGR_revenue_majorcats_tot &lt;- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_25) %&gt;%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %&gt;% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10, \"25-Year CAGR\" = cagr_25 )\n\nCAGR_revenue_majorcats_tot &lt;- move_to_last(CAGR_revenue_majorcats_tot,1)\nCAGR_revenue_majorcats_tot &lt;- move_to_last(CAGR_revenue_majorcats_tot,11)\n\nCAGR_revenue_majorcats_tot %&gt;% \n  kbl(caption = \"CAGR Calculations for Largest Revenue Sources\", row.names = FALSE) %&gt;% \n  kable_classic() %&gt;%\n    row_spec(12, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.4: Top 10 Revenue Sources with CAGRs\n\n\n\n\n\nCAGR Calculations for Largest Revenue Sources\n\n\nRevenue Category\n1 Year CAGR\n2 Year CAGR\n3 Year CAGR\n5 Year CAGR\n10 Year CAGR\n25-Year CAGR\n\n\n\n\nCorporate Income Tax\n4.556312\n32.278053\n42.323578\n24.8790961\n8.951797\n7.161330\n\n\nFederal Medicaid Reimbursements\n6.091446\n7.281008\n13.437313\n8.4399008\n9.323655\n7.466601\n\n\nFederal Other\n-43.869229\n8.684250\n3.878481\n13.3947814\n5.666730\n4.354718\n\n\nFederal Transportation\n15.300213\n-5.742851\n5.831739\n5.8205519\n2.173993\n3.784926\n\n\nIncome Tax\n-4.280389\n2.735038\n8.894055\n6.1856097\n4.346622\n5.368743\n\n\nLicenses, Fees, Registration\n9.246722\n2.238833\n13.234254\n11.0722031\n6.180345\n7.944139\n\n\nMedical Provider Assessments\n9.497774\n3.597628\n5.579728\n13.1480627\n9.456415\n8.408949\n\n\nMotor Fuel Taxes\n1.656423\n3.819450\n3.475268\n13.4350273\n7.386331\n2.760353\n\n\nReceipts from Revenue Producing\n8.470365\n5.703997\n5.994509\n0.8918354\n2.687535\n5.207634\n\n\nSales Tax\n4.835811\n8.040426\n9.745200\n6.6729036\n4.712900\n3.303547\n\n\nAll Other Sources **\n14.470649\n14.127358\n13.756850\n6.8896943\n4.753734\n4.298007\n\n\nTotal Revenue\n-3.693761\n8.352330\n11.520802\n8.8896256\n5.883931\n5.126245\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n###### Yearly change summary table for Top 10 Revenues #####\nrevenue_change_majorcats &lt;- rev_long_majorcats %&gt;%\n  #select(-c(Category)) %&gt;%\n  filter(Year &gt; 2021) %&gt;%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %&gt;%\n  mutate(\n    \"FY 2023 ($ billions)\" = Dollars_2023/1000,\n            \"FY 2022 ($ billions)\" = Dollars_2022/1000,\n\n         \"1-Year Change\" = percent(((Dollars_2023 -Dollars_2022)/Dollars_2022), accuracy = .1)) %&gt;%\n  left_join(CAGR_revenue_majorcats_tot, by = c(\"Category_name\" = \"Revenue Category\")) %&gt;% \n    arrange(-`FY 2023 ($ billions)`)%&gt;%\n  #select(-c(Dollars_2021, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %&gt;%\n  mutate(\"25-Year Change\" = percent(`25-Year CAGR`/100, accuracy=.1)) %&gt;%\n  rename(\"Revenue Category\" = Category_name ) %&gt;%\n  select(-c(Dollars_2023, Dollars_2022, `1 Year CAGR`:`25-Year CAGR`)) \n\nrevenue_change_majorcats &lt;- move_to_last(revenue_change_majorcats,5)\n\nrevenue_change_majorcats &lt;- move_to_last(revenue_change_majorcats,1)\n\nrevenue_change_majorcats%&gt;% \n  kbl(caption = \"Yearly Change in Revenue for Main Revenue Sources\", row.names = FALSE, align = \"l\") %&gt;% \n   kable_classic() %&gt;%\n    row_spec(12, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.5: Top 10 Revenue Sources with CAGRs\n\n\n\n\n\nYearly Change in Revenue for Main Revenue Sources\n\n\nRevenue Category\nFY 2023 ($ billions)\nFY 2022 ($ billions)\n1-Year Change\n25-Year Change\n\n\n\n\nIncome Tax\n25.309542\n26.441334\n-4.3%\n5.4%\n\n\nFederal Medicaid Reimbursements\n20.205138\n19.045021\n6.1%\n7.5%\n\n\nSales Tax\n16.222466\n15.474165\n4.8%\n3.3%\n\n\nFederal Other\n10.878720\n19.381027\n-43.9%\n4.4%\n\n\nCorporate Income Tax\n10.484327\n10.027445\n4.6%\n7.2%\n\n\nMedical Provider Assessments\n4.088380\n3.733756\n9.5%\n8.4%\n\n\nReceipts from Revenue Producing\n2.589099\n2.386919\n8.5%\n5.2%\n\n\nMotor Fuel Taxes\n2.569229\n2.527365\n1.7%\n2.8%\n\n\nFederal Transportation\n2.114102\n1.833563\n15.3%\n3.8%\n\n\nLicenses, Fees, Registration\n2.060599\n1.886189\n9.2%\n7.9%\n\n\nAll Other Sources **\n15.252721\n13.324569\n14.5%\n4.3%\n\n\nTotal Revenue\n111.774323\n116.061352\n-3.7%\n5.1%\n\n\n\n\n\n\n\n\n\n\n\nExport summary file with Totals\n\n\nCode\n#install.packages(\"openxlsx\")\nlibrary(openxlsx)\n\ndataset_names &lt;- list('Aggregate Revenues' = revenue_wide2, \n                      'Aggregate Expenditures' = expenditure_wide2, \n\n                      \n                      'Table 1' = revenue_change_majorcats, #Top categories with yearly change, 23 yr cagr\n                      'Table 2' = expenditure_change_majorcats,\n                      \n                      'Table 1a. AllCats' = revenue_change2,\n                      'Table 2a. AllCats' = expenditure_change2,\n                      \n                      'CAGR Rev-MajorCats' = CAGR_revenue_majorcats_tot, # Categories Match Table 1 in paper\n                      'CAGR Exp-MajorCats' = CAGR_expenditures_majorcats_tot, \n                                            \n                     # 'Table 1-AllCats' = expenditure_change_allcats,  # All Categories by Year\n                    #  'Table 2-AllCats' = revenue_change_allcats,\n                      \n                    #  'CAGR_Revenue-AllCats' = CAGR_revenue_summary_tot, \n                   #   'CAGR_Expenditures-AllCats' = CAGR_expenditures_summary_tot, \n                      \n                      'Fiscal Gap' = year_totals,    # Total Revenue, Expenditure, and Fiscal gap per year\n                      \n                      'aggregated_totals_long' = aggregated_totals_long # all data in long format. Good for creating pivot tables in Excel\n                      )\n\nwrite.xlsx(dataset_names, file = 'summary_file_FY23_wTotals_22March2024.xlsx')\n\n\nSaves main items in one excel file named summary_file.xlsx. Delete eval=FALSE to run on local computer.",
    "crumbs": [
      "About",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap - Rounded Output</span>"
    ]
  },
  {
    "objectID": "Everything_notrounded.html#forecasting-attempt",
    "href": "Everything_notrounded.html#forecasting-attempt",
    "title": "1  Calculating the Fiscal Gap - Rounded Output",
    "section": "4.1 Forecasting attempt",
    "text": "4.1 Forecasting attempt\nFirst images use revenue that includes all federal stimulus packages. Revenue projections are skewed heavily due to the large amount of covid money flowing in the past 2 years.\n\n\nCode\n## Revenues\nyear_totals2 &lt;- year_totals2 %&gt;% \n  arrange(Year)\n\n#ts_rev &lt;- year_totals %&gt;% select(Year, Revenue ) %&gt;% arrange(Year)\n\ntsrev &lt;- ts(year_totals2$Revenue, start =\"1998\", frequency = 1) # yearly data\n\n# start(tsrev) # 1998, January\n# end(tsrev)  ## 2022 \n# summary(tsrev)\n# plot(tsrev)\n# abline(reg=lm(tsrev~time(tsrev)))\n\n\n#### ARIMAs\nmymodel &lt;- auto.arima(tsrev, seasonal = FALSE)\n# mymodel          # ARIMA (0, 1, 0) with drift\nmyforecastrev &lt;- forecast(mymodel, h = 20)\n#plot(myforecastrev,  xlab =\"\", ylab =\"Total Revenue\", main =\"Chicago Revenue\")\n\n\n\n\n#### revenue chart\nmodel_rev &lt;- auto.arima(tsrev, seasonal = FALSE)\nforecast_rev &lt;- forecast(model_rev, h = 20)\n\nq &lt;- forecast(forecast_rev,  h = 20) %&gt;% \n  autoplot() +\n    ylab(\"Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Revenue\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nsummary(forecast_rev)\n\n# annotation &lt;- data.frame(\n#   x = c(2027, 2032),\n#   y = c(200000, 300000),  \n#   label = c(\"$120 billion in 2027\",\"$135 billion in 2032\")\n# )\n\nannotation &lt;- data.frame(\n  x = c(2020, 2032),\n  y = c(150000, 200000),  \n  label = c(\"$120 billion in 2027\",\"$135 billion in 2032\")\n)\n\nq+ geom_label(data = annotation, aes(x=x, y=y, label=label), size = 3) +\n  labs(caption = \"after dropping federal covid dollars\")\n\n\n## Expenditures\ntsexp &lt;- ts(year_totals2$Expenditures, start = \"1998\", frequency = 1)\nmodel_exp&lt;- auto.arima(tsexp, seasonal = FALSE)\n# model_exp            # ARIMA (0,1,1) with drift\n\nforecast_exp &lt;- forecast(model_exp, h = 20) \n#plot(forecast_exp, xlab =\"\",  ylab =\"Total Expenditures\", main =\"Chicago Expenditures\")\n\np &lt;- forecast(model_exp,  h = 20) %&gt;% \n  autoplot() +\n    ylab(\"Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Expenditures\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nsummary(forecast_exp)\n\nannotation &lt;- data.frame(\n  x = c(2027, 2032),\n  y = c(130000, 100000),  label = c(\"$117 ± 20 Billion in 2027\",\"$132 ± 26 Billion in 2032 \")\n)\n\np + \n  geom_label(data = annotation, aes(x=x, y=y, label=label), size = 3) + \n  labs(title = \"Forecasted Expenditures\", \n  caption = \"Projected values at 95% confidence interval. \n  Dark blue represents 80% liklihood of falling with that range, \n  light blue represents 95% liklihood of being in projected range.\")\n\n\n\n## Exp and Rev together\n\nautoplot(tsexp) +\n  #geom_line(tsexp)+\n  #geom_line(aes(model_rev))+\n  autolayer(forecast_rev, series = \"Revenue\") +\n  autolayer(forecast_exp, series = \"Expenditure)\", alpha = 0.5) +\n  geom_line(year_totals, mapping= aes(x = Year, y = Revenue))  + guides(colour = guide_legend(\"Forecast\")) + \n  labs(title = \"Forecasted Revenue and Expenditures\", caption = \"Revenue includes State and Local CURE Dollars\")\n\n\nRevenue forecasting using precovid trends:\nGraphing the 3 federal revenue types together may be the most reliable since some COVID funding is still recorded in Federal Other and some are in other categories (like Disaster Response in FY2021). Need to look at more before using.\n\n\nCode\n# does not include rev_type == 58, medicaid dollars\n# covid_dollars &lt;- rev_temp %&gt;% filter(covid_dollars==1) # check what was dropped\n\n#covid_dollars %&gt;% group_by(fy,rev_type) %&gt;% summarize(receipts = sum(receipts)) %&gt;% pivot_wider(names_from=\"rev_type\", values_from = \"receipts\")\n\n\nrev_temp &lt;- rev_temp %&gt;%  filter(covid_dollars==0) # keeps observations that were not coded as COVID federal funds\n\n\n\nff_rev &lt;- rev_temp %&gt;% \n  group_by(rev_type_new, fy) %&gt;% \n  summarize(sum_receipts = sum(receipts, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"rev_type_new\", values_from = \"sum_receipts\", names_prefix = \"rev_\")\n\n# ff_rev&lt;- left_join(ff_rev, tax_refund)\n\nff_rev &lt;- mutate_all(ff_rev, ~replace_na(.,0))\n\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   mutate(rev_02 = rev_02 - ref_02,\n#          rev_03 = rev_03 - ref_03,\n#          rev_06 = rev_06 - ref_06,\n#          rev_09 = rev_09 - ref_09,\n#          rev_21 = rev_21 - ref_21,\n#          rev_24 = rev_24 - ref_24,\n#          rev_35 = rev_35 - ref_35\n# \n#          ) %&gt;% \n#   select(-c(ref_02:ref_35, rev_99, rev_76\n#             ,ref_CHECK\n#             ))\n\nrev_long &lt;- pivot_longer(ff_rev, rev_02:rev_78, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy) %&gt;%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"INDIVIDUAL INCOME TAX\" ,\n    Category == \"03\" ~ \"CORPORATE INCOME TAX\" ,\n    Category == \"06\" ~ \"SALES TAX\" ,\n    Category == \"09\" ~ \"MOTOR FUEL TAX\" ,\n    Category == \"12\" ~ \"PUBLIC UTILITY TAX\" ,\n    Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES\" ,\n    Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"MEDICAL PROVIDER ASSESSMENTS\" ,\n    Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"RECEIPTS FROM REVENUE PRODUCING\", \n    Category == \"39\" ~  \"LICENSES, FEES & REGISTRATIONS\" ,\n    Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"FEDERAL OTHER\" ,\n    Category == \"58\" ~  \"FEDERAL MEDICAID\", \n    Category == \"59\" ~  \"FEDERAL TRANSPORTATION\" ,\n    Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    Category == \"78\" ~  \"ALL OTHER SOURCES\" ,\n    Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\n                 T ~ \"Check Me!\"\n\n  ) )%&gt;% \n  mutate(Category_name = str_to_title(Category_name))\n\n\n\nff_exp &lt;- exp_temp %&gt;% \n  group_by(fy, group) %&gt;% \n  summarize(sum_expenditures = sum(expenditure, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditures\", names_prefix = \"exp_\")%&gt;%\n  \n    left_join(debt_keep_yearly) %&gt;%\n  mutate(exp_903 = debt_cost) %&gt;%\n  left_join(transfers) %&gt;%\n  mutate(exp_970 = exp_971 + exp_972  + exp_975 + exp_976)\n\nff_exp&lt;- ff_exp %&gt;% select(-c(debt_cost, exp_971:exp_976)) # drop unwanted columns\n\nexp_long &lt;- pivot_longer(ff_exp, exp_402:exp_970 , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy ) %&gt;% \n  mutate(Category_name = \n           case_when(\n             Category == \"402\" ~ \"AGING\" ,\n             Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"CENTRAL MANAGEMENT\",\n             Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"COMMERCE AND ECONOMIC OPPORTUNITY\",\n             Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"CORRECTIONS\",\n             Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"HUMAN SERVICES\" ,\n             Category == \"448\" ~ \"Innovation and Technology\", # AWM added fy2022\n             Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n             Category == \"482\" ~ \"PUBLIC HEALTH\", \n             Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"TRANSPORTATION\" ,\n             Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"IL STATE TOLL HIGHWAY AUTH\" ,\n             Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n             Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n             Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             Category == \"903\" ~ \"DEBT SERVICE\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n             Category == \"910\" ~ \"LEGISLATIVE\"  ,\n             Category == \"920\" ~ \"JUDICIAL\" ,\n             Category == \"930\" ~ \"ELECTED OFFICERS\" , \n             Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"PUBLIC SAFETY\" ,\n             Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             Category == \"943\" ~ \"CENTRAL SERVICES\",\n             Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"MEDICAID\" ,\n             Category == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 EDUCATION\" ,\n             Category == \"960\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Transfers\",\n             T ~ \"CHECK ME!\")\n           ) %&gt;% \n  mutate(Category_name = str_to_title(Category_name))\n\n\n#exp_long_nototals &lt;- exp_long %&gt;% filter(Category_name != \"Totals\")\n\n\naggregated_totals_long &lt;- rbind(rev_long, exp_long) \n\n\nChange plots:\n\n\nCode\nyear_totals2 &lt;- aggregated_totals_long %&gt;% \n  group_by(type, Year) %&gt;% \n  summarize(Dollars = sum(Dollars, na.rm = TRUE)) %&gt;% \n  pivot_wider(names_from = \"type\", values_from = Dollars) %&gt;% \n  rename(\n         Expenditures = exp,\n         Revenue = rev) %&gt;%  \n  mutate(`Fiscal Gap` = round(Revenue - Expenditures)) %&gt;% \n  arrange(desc(Year))\n# creates variable for the Gap each year\n\nyear_totals2 # gap for FY22 changed to ~2 or 3 billion\n\n\n\n\nTable 4.1: Fiscal Gap without State CURE Federal Revenue\n\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\nannotation_billions &lt;- data.frame(\n  x = c(2004, 2017, 2019),\n  y = c(60, 50, 10),\n  label = c(\"Expenditures\",\"Revenue\", \"Fiscal Gap\"))\n\nfiscal_gap1 &lt;- ggplot(data = year_totals, aes(x=Year, y = Revenue/1000)) +\n  geom_recessions(text = FALSE)+\n  geom_hline(yintercept = 0) +\n  geom_line(aes(x = Year, y = Revenue/1000), color = \"Black\", lwd=1) +\n  geom_line(aes(x = Year, y = Expenditures/1000, linetype = \"dashed\"), color = \"red\", lwd=1) +\n  geom_line(aes(x = Year, y = `Fiscal Gap`/1000), color = \"gray\") +\n\n  geom_text(data = annotation_billions, aes(x=x, y=y, label=label))+\n    theme_classic() +\n  theme(legend.position = \"none\", #axis.text.y = element_blank(),\n        #axis.ticks.y = element_blank(),\n                                    axis.title.y = element_blank())+\n    scale_linetype_manual(values = c(\"dashed\", \"dashed\")) +\n  scale_y_continuous(limits = c(-16, 120), labels = comma)+\n    scale_x_continuous(limits=c(1998,2023), expand = c(0,0))\n\nfiscal_gap1\n#ggsave(fiscal_gap1, file = \"Figure7a-WithCURE.eps\")\n\n\nfiscal_gap_droppedCURE &lt;- ggplot(data = year_totals2, aes(x=Year, y = Revenue/1000)) +\n  geom_recessions(text = FALSE)+\n  geom_hline(yintercept=0)+\n\n    geom_hline(yintercept = 0) +\n  geom_line(aes(x = Year, y = Revenue/1000), color = \"Black\", lwd=1) +\n  geom_line(aes(x = Year, y = Expenditures/1000, linetype = \"dashed\"), color = \"red\", lwd=1) +\n  geom_line(aes(x = Year, y = `Fiscal Gap`/1000), color = \"gray\") +\n\n  geom_text(data = annotation_billions, aes(x=x, y=y, label=label))+\n    theme_classic() +\n  theme(legend.position = \"none\",# axis.text.y = element_blank(),\n                                    #axis.ticks.y = element_blank(),\n                                    axis.title.y = element_blank() )+\n    scale_linetype_manual(values = c(\"dashed\", \"dashed\")) +\n  scale_y_continuous(limits=c(-16,120), labels = comma)+\n    scale_x_continuous(limits=c(1998,2023),expand = c(0,0))\n\n\n\n  # # geom_smooth adds regression line, graphed first so it appears behind line graph\n  # geom_smooth(aes(x = Year, y = Revenue), color = \"gray\", method = \"lm\", se = FALSE) + \n  # geom_smooth(aes(x = Year, y = Expenditures), color = \"rosybrown2\", method = \"lm\", se = FALSE) +\n  # \n  # # line graph of revenue and expenditures\n  # geom_line(aes(x = Year, y = Revenue), color = \"black\", size=1) +\n  # geom_line(aes(x = Year, y = Expenditures), color = \"red\", size=1) +\n  # geom_line(aes(x=Year, y = `Fiscal Gap`), color=\"gray\") +\n  # \n  # geom_text(data= annotation, aes(x=x, y = y, label=label))+\n  # \n  # # labels\n  #   theme_bw() +\n  # scale_y_continuous(labels = comma)+\n  # xlab(\"Year\") + \n  # ylab(\"Millions of Dollars\")  +\n  # ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\n  fiscal_gap_droppedCURE\n  \n#ggsave(fiscal_gap_droppedCURE, file = \"Figure7b-WithoutCURE.eps\")\n\n\n\n\nFigure 4.1: Illinois Revenue Trend\n\n\n\n\n\n\n(a) With State CURE\n\n\n\n\n\n\n\n\n\n\n\n(b) Without State CURE\n\n\n\n\n\n\n\n\n\n\n\nCompare with and without federal COVID dollars:\nRevenue amounts in millions of dollars:\n\n\nCode\nrev_long %&gt;%\n  filter(Year == 2023) %&gt;%\n  #mutate(`Total Expenditures`= sum(Dollars, na.rm = TRUE)) %&gt;%\n # select(-c(Year, `Total Expenditures`)) %&gt;%\n  arrange(desc(`Dollars`)) %&gt;%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`))+ \n  coord_flip() +\n    theme_bw() +\n      labs(title = \"Revenues for FY2023\")+\n    xlab(\"Revenue Categories\") +\n  ylab(\"Millions of Dollars\")\n\n\n\n\n\nFigure 4.2: Comparison of revenue with and without federal State CURE funds.",
    "crumbs": [
      "About",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap - Rounded Output</span>"
    ]
  },
  {
    "objectID": "Everything_notrounded.html#all-categories-with-totals",
    "href": "Everything_notrounded.html#all-categories-with-totals",
    "title": "1  Calculating the Fiscal Gap - Rounded Output",
    "section": "4.2 All Categories with Totals",
    "text": "4.2 All Categories with Totals\n\n\n\nTable 4.2: Revenue without State CURE\n\n\n\nCode\nexp_totals &lt;- ff_exp %&gt;% rowwise() %&gt;% mutate(exp_TOTALS = sum(across(exp_402:exp_970)))\nrev_totals &lt;- ff_rev %&gt;%    rowwise() %&gt;% \n  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long &lt;- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy) %&gt;%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"INDIVIDUAL INCOME TAXES\" ,\n    Category == \"03\" ~ \"CORPORATE INCOME TAXES\" ,\n    Category == \"06\" ~ \"SALES TAXES\" ,\n    Category == \"09\" ~ \"MOTOR FUEL TAX\" ,\n    Category == \"12\" ~ \"PUBLIC UTILITY TAXES\" ,\n    Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES\" ,\n    Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"MEDICAL PROVIDER ASSESSMENTS\" ,\n    Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"RECEIPTS FROM REVENUE PRODUCING\", \n    Category == \"39\" ~  \"LICENSES, FEES & REGISTRATIONS\" ,\n    Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"FEDERAL OTHER\" ,\n    Category == \"58\" ~  \"FEDERAL MEDICAID\", \n    Category == \"59\" ~  \"FEDERAL TRANSPORTATION\" ,\n    Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    Category == \"78\" ~  \"ALL OTHER SOURCES\" ,\n    Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\nCategory == \"TOTALS\" ~ \"Total\"\n\n  ) ) %&gt;% \n  select(-type, -Category) %&gt;%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %&gt;%\n  summarise(Dollars= round(sum(Dollars),digits=2)) %&gt;% \n  mutate(Category_name = str_to_title(Category_name))\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide2 &lt;- rev_long %&gt;% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n#  relocate(\"Other Revenue Sources **\", .after = last_col()) %&gt;%\n  relocate(\"Total\", .after =  last_col())\n\n\n\n\n\n\nCode\nexp_long &lt;- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy ) %&gt;% \n  mutate(Category_name = \n           case_when(\n            Category == \"402\" ~ \"AGING\" ,\n            Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"Central Management\",\n            Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"Community Development\",\n            Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"CORRECTIONS\",\n            Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n            Category == \"482\" ~ \"PUBLIC HEALTH\", \n            Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"Transportation\" ,\n             Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n             Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n             Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n             Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n             Category == \"910\" ~ \"LEGISLATIVE\"  ,\n             Category == \"920\" ~ \"JUDICIAL\" ,\n             Category == \"930\" ~ \"ELECTED OFFICERS\" , \n             Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n             Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             Category == \"943\" ~ \"CENTRAL SERVICES\",\n             Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n             Category == \"946\" ~ \"Capital Improvement\" , \n             Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n             Category == \"960\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total\") #,T ~ \"All Other Expenditures **\")\n           ) %&gt;% \n  select(-type, -Category) %&gt;% \n  group_by(Year, Category_name) %&gt;% \n  summarise(Dollars= round(sum(Dollars),digits=2)) %&gt;% \n  mutate(Category_name = str_to_title(Category_name))\n\nexpenditure_wide2 &lt;- exp_long%&gt;% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  #relocate(\"All Other Expenditures **\", .after = last_col()) %&gt;%\n  relocate(\"Total\", .after =  last_col())",
    "crumbs": [
      "About",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap - Rounded Output</span>"
    ]
  },
  {
    "objectID": "Everything.html",
    "href": "Everything.html",
    "title": "2  Calculating the Fiscal Gap",
    "section": "",
    "text": "2.1 Modify Expenditure File",
    "crumbs": [
      "About",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#modify-expenditure-file",
    "href": "Everything.html#modify-expenditure-file",
    "title": "2  Calculating the Fiscal Gap",
    "section": "",
    "text": "2.1.1 Tax refunds\nAggregate expenditures: Save tax refunds as negative revenue. Code refunds to match the rev_type codes (02=income taxes, 03 = corporate income taxes, 06=sales tax, 09=motor fuel tax, 24=insurance taxes and fees, 35 = all other tax refunds).\n\n\nCode\ntax_refund_long &lt;- exp_temp %&gt;%           # fund != \"0401\" # removes State Trust Funds\n  filter(fund != \"0401\" & (object==\"9910\"|object==\"9921\"|object==\"9923\"|object==\"9925\")) %&gt;%\n  # keeps these objects which represent revenue, insurance, treasurer,and financial and professional reg tax refunds\n  mutate(refund = case_when(\n    fund==\"0278\" & sequence == \"00\" ~ \"02\", # for income tax refund\n    fund==\"0278\" & sequence == \"01\" ~ \"03\", # tax administration and enforcement and tax operations become corporate income tax refund\n     fund == \"0278\" & sequence == \"02\" ~ \"02\",\n    object==\"9921\" ~ \"21\",                # inheritance tax and estate tax refund appropriation\n    object==\"9923\" ~ \"09\",                # motor fuel tax refunds\n    obj_seq_type == \"99250055\" ~ \"06\",    # sales tax refund\n    fund==\"0378\" & object==\"9925\" ~ \"24\", # insurance privilege tax refund\n   (fund==\"0001\" & object==\"9925\") | (object==\"9925\" & fund == \"0384\" & fy == 2023) ~ \"35\", # all other taxes\n   # fund==\"0001\" & object==\"9925\" ~ \"35\", # all other taxes\n      T ~ \"CHECK\"))                       # if none of the items above apply to the observations, then code them as CHECK \n\n    \nexp_temp &lt;- left_join(exp_temp, tax_refund_long) %&gt;%\n  mutate(refund = ifelse(is.na(refund),\"not refund\", as.character(refund)))\n\ntax_refund &lt;- tax_refund_long %&gt;% \n  group_by(refund, fy)%&gt;%\n  summarize(refund_amount = sum(expenditure, na.rm = TRUE)/1000000) %&gt;%\n  pivot_wider(names_from = refund, values_from = refund_amount, names_prefix = \"ref_\") %&gt;%\n  mutate_all(~replace_na(.,0)) %&gt;%\n  arrange(fy)\n\ntax_refund %&gt;% \n  pivot_longer( ref_02:ref_35, names_to = \"Refund Type\", values_to = \"Amount\") %&gt;%\n  ggplot()+\n  theme_classic()+\n  geom_line(aes(x=fy,y=Amount, group = `Refund Type`, color = `Refund Type`))+\n  labs(title = \"Refund Types\", \n       caption = \"Refunds are excluded from Expenditure totals and instead subtracted from Revenue totals\") + \n  labs(title = \"Tax refunds\", \n       caption = \"Rev_type codes: 02=income taxes, 03=corporate income taxes, 06=sales tax, 09=motor fuel tax, \n       24=insurance taxes and fees, 35 = all other tax refunds.\" )\n\n# remove the items we recoded in tax_refund_long\n# exp_temp &lt;- exp_temp %&gt;% filter(refund == \"not refund\")\n\n\n\n\n\nFigure 2.1: Tax Refunds\n\n\n\n\n\n\n\n\n\n\nCode\n# manually adds the abatements as expenditure item and keeps on expenditure side.\n# otherwise ignored since it is in fund 0278 and \nexp_temp &lt;- exp_temp %&gt;%\n  mutate(in_ff = ifelse(object == 9900, 1, in_ff))\n\n\n\n\n2.1.2 Pension Expenditures\nState pension contributions are largely captured with object=4431. (State payments into pension fund). State payments to the following pension systems:\n\nTeachers Retirement System (TRS)\nNew POB bond in 2019: Accelerated Bond Fund paid benefits in advance as lump sum\nState Employee Retirement System (SERS)\nState University Retirement System (SURS)\nJudges Retirement System (JRS)\nGeneral Assembly Retirement System (GARS)\n\nModify exp_temp and move all state pension contributions to their own group (901). For more information on the variables included or excluded, please see ?sec-pensions.\n\n\nCode\nexp_temp &lt;-  exp_temp %&gt;% \n  arrange(fund) %&gt;%\n  mutate(pension = case_when( \n    (object==\"4431\") ~ 1, # 4431 = easy to find pension payments INTO fund\n    \n    # (object&gt;\"1159\" & object&lt;\"1166\") & fund != \"0183\" & fund != \"0193\"   ~ 2, \n    # objects 1159 to 1166 are all considered Retirement by Comptroller, \n    # Excluded - employer contributions from agencies/organizations/etc.\n    \n    (object==\"1298\" &  # Purchase of Investments, Normally excluded\n       (fy==2010 | fy==2011) & \n       (fund==\"0477\" | fund==\"0479\" | fund==\"0481\")) ~ 3, #judges retirement OUT of fund\n    # state borrowed money from pension funds to pay for core services during 2010 and 2011. \n    # used to fill budget gap and push problems to the future. \n    \n    fund == \"0319\" ~ 4, # pension stabilization fund\n    TRUE ~ 0) )\n\ntable(exp_temp$pension) \n\n\n\n     0      1      3      4 \n237827    242      6     15 \n\n\nCode\nexp_temp %&gt;% \n  filter(pension != 0) %&gt;%\n  mutate(pension = as.factor(pension))%&gt;%\n  group_by(fy, pension) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x=fy, y = expenditure, group=pension)) + \n  theme_classic()+\n  geom_col(aes(fill = pension)) + \n\n  labs (title = \"Pension expenditures\", \n  caption = \"1 = State contributions INTO pension funds. \n  3 = Purchase of Investments anomoly in 2010 and 2011. \n  4 = pension stabilization fund\")+\n    theme(legend.position = \"bottom\")\n\n\n\n\n\nFigure 2.2: Pensions\n\n\n\n\n\n\n\n\n\n\nCode\n# special accounting of pension obligation bond (POB)-funded contributions to JRS, SERS, GARS, TRS \n\nexp_temp &lt;- exp_temp %&gt;% \n  # change object for 2010 and 2011, retirement expenditures were bond proceeds and would have been excluded\n  mutate(object = ifelse((pension &gt;0 & in_ff == \"0\"), \"4431\", object)) %&gt;% \n  # changes weird teacher & judge retirement system  pensions object to normal pension object 4431\n  mutate(pension =  ifelse(pension &gt;0 & in_ff == \"0\", 6, pension)) %&gt;% # coded as 6 if it was supposed to be excluded. \n  mutate(in_ff = ifelse(pension&gt;0, \"1\", in_ff))\n\ntable(exp_temp$pension) \n\n\n\n     0      1      4      6 \n237827    240     15      8 \n\n\nCode\n# all other pensions objects  codes get agency code 901 for State Pension Contributions\nexp_temp &lt;- exp_temp %&gt;% \n  mutate(agency = ifelse(pension&gt;0, \"901\", as.character(agency)),\n         agency_name = ifelse(agency == \"901\", \"State Pension Contributions\", as.character(agency_name)))\n\nexp_temp %&gt;% \n filter(pension &gt; 0) %&gt;%  \n  mutate(pension = as.factor(pension)) %&gt;%\n  group_by(fy, pension) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %&gt;%\n  ggplot(aes(x=fy, y=expenditure, color = pension)) +\n  geom_line() + \n  theme_classic()+\n  labs (title = \"Pension Expenditures\", \n  caption = \"\")\n\nexp_temp %&gt;% \n filter(pension &gt; 0) %&gt;%  \n  group_by(fy) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %&gt;%\n  ggplot(aes(x=fy, y=expenditure)) +\n  geom_line() + \n  theme_classic()+\n  labs (title = \"Pension Expenditures\")\n\n\n\n\n\nFigure 2.3: Pension Expenditures\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.4: Pension Expenditures\n\n\n\n\n\n\n\n\n\n\n2.1.3 Drop Interfund transfers\nDrop all cash transfers between funds, statutory transfers, and purchases of investments from expenditure data.\n\nobject == 1993 is for interfund cash transfers\nagency == 799 is for statutory transfers\nobject == 1298 is for purchase of investments and is not spending EXCEPT for costs in 2010 and 2011 (and were recoded already to object == “4431”). Over 168,000 observations remain.\n\n153,889 observations on 1/23/2022?\n\n\n\n\nCode\ntransfers_drop &lt;- exp_temp %&gt;% filter(\n  agency == \"799\" | # statutory transfers\n           object == \"1993\" |  # interfund cash transfers\n           object == \"1298\") # purchase of investments\ntransfers_drop # items being dropped, \n\n\n\n  \n\n\n\nCode\n# always check to make sure you aren't accidently dropping something of interest.\n\nexp_temp &lt;- anti_join(exp_temp, transfers_drop)\nexp_temp\n\n\n\n  \n\n\n\n\n\n2.1.4 State employee healthcare costs\nCoding healthcare costs was quite difficult. Over the years, State employee healthcare has been within Central Management Bureau of Benefits and Healthcare & Family Services.\nIf observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis).\nAgency 416 had group insurance contributions for 1998-2005 and 2013-present. Agency 478 had group insurance contributions from 2006-2012.\nFY2021 and FY2022 contributions coded with object = 1900 (lump sum) for some reason??\n\n\nCode\n#if observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis)\n\n# pretend eehc is named group_insurance_contribution or something like that\n# eehc coded as zero implies that it is group insurance\n# if eehc=0, then expenditures are coded as zero for group insurance to avoid double counting costs\n\n\nexp_temp &lt;- exp_temp %&gt;% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 0, 1) )%&gt;% \n  \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" \n    & appr_org==\"80\", 0, eehc) )%&gt;%\n    \n   # group insurance contributions from road fund\n  # coded with 1900 for some reason??\n    mutate(eehc = ifelse(\n      fund == \"0011\" & object == \"1900\" & \n        agency == \"416\" & appr_org==\"20\", 0, eehc) ) %&gt;%\n  \n  mutate(expenditure = ifelse(eehc==\"0\", 0, expenditure)) %&gt;%\n  \n  mutate(agency = case_when(   # turns specific items into State Employee Healthcare (agency=904)\n      fund==\"0907\" & (agency==\"416\" & appr_org==\"20\") ~ \"904\",   # central management Bureau of benefits using health insurance reserve \n      fund==\"0907\" & (agency==\"478\" & appr_org==\"80\") ~ \"904\",   # agency = 478: healthcare & family services using health insurance reserve - stopped using this in 2012\n      TRUE ~ as.character(agency))) %&gt;%\n  mutate(agency_name = ifelse(\n    agency == \"904\", \"STATE EMPLOYEE HEALTHCARE\", as.character(agency_name)),\n         in_ff = ifelse( agency == \"904\", 1, in_ff),\n         group = ifelse(agency == \"904\", \"904\", as.character(agency)))  \n# creates group variable\n\n# Default group = agency number\n\nhealthcare_costs &lt;- exp_temp %&gt;% filter(group == \"904\")\n\nhealthcare_costs\n\n\n\n  \n\n\n\nCode\nexp_temp %&gt;% \n  filter(group == \"904\") %&gt;% \n  group_by(fy) %&gt;% \n  summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)) %&gt;% \n  ggplot() +\n  geom_line(aes(x=fy, y=healthcare_cost)) + \n  labs(title=\"State Employee Healthcare Costs - Included in Fiscal Futures Model\", \n       caption = \"Fund 0907 for agencies responsible for health insurance reserve (DHFS & CMS)\")\n\n\n\n\n\n\n\n\n\nCode\n#exp_temp &lt;- anti_join(exp_temp, healthcare_costs) %&gt;% mutate(expenditure = ifelse(object == \"1180\", 0, expenditure))\n\n#healthcare_costs_yearly &lt;- healthcare_costs %&gt;% group_by(fy, group) %&gt;% summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)/1000000) %&gt;% select(-group)\n\n\n\n\n2.1.5 Local Transfers\nSeparate transfers to local from parent agencies that come from DOR(492) or Transportation (494). Treats muni revenue transfers as expenditures, not negative revenue.\nThe share of certain taxes levied state-wide at a common rate and then transferred to local governments. (Purely local-option taxes levied by specific local governments with the state acting as collection agent are NOT included.)\nThe six corresponding revenue items are:\n\nLocal share of Personal Income Tax\n\nIndividual Income Tax Pass-Through New 2021 (source 2582).\n\nLocal share of General Sales Tax\nPersonal Property Replacement Tax on Business Income\nPersonal Property Replacement Tax on Public Utilities\nLocal share of Motor Fuel Tax\nTransportation Renewal Fund 0952\n\nUntil Dec 18. 2022, Local CURE was being aggregated into Revenue totals since the agency was the Department of Revenue. However the $371 million expenditure is for “LOC GOVT ARPA” and the revenue source that is Local CURE is also $371 million. Since it cancels out and is just passed through the state government, I am changing changing the fund_ab_in file so that in_ff=0 for the Local CURE fund. It also inflates the department of revenue expenditures in a misleading way when the expense is actually a transfer to local governments.\n\nDropping Local CURE fund from analysis results in a $371 million decrease in the department of Revenue (where the Local Government ARPA transfer money). The appropriation for it was over $740 million so some will probably be rolled over to FY23 too.\n\nIn the FY21 New and Reused Funds word document, 0325 Local CURE is described as “Created as a federal trust fund. The fund is established to receive transfers from either the disaster response and recovery fund or the state cure fund of federal funds received by the state. These transfers, subject to appropriation, will provide for the administration and payment of grants and expense reimbursements to units of local government. Revenues should be under Federal Other and expenditures under Commerce and Economic Opportunity.” - I propose changing it to exclude for both.\n\n\n\nCode\nexp_temp &lt;- exp_temp %&gt;% mutate(\n  agency = case_when(fund==\"0515\" & object==\"4470\" & type==\"08\" ~ \"971\", # income tax to local governments\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"00\" ~ \"971\", # object is shared revenue payments\n                     fund==\"0802\" & object==\"4491\" ~ \"972\", #pprt transfer\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"01\" ~ \"976\", #gst to local\n                     fund==\"0627\" & object==\"4472\"~ \"976\" , # public transportation fund but no observations exist\n                     fund==\"0648\" & object==\"4472\" ~ \"976\", # downstate public transportation, but doesn't exist\n                     fund==\"0515\" & object==\"4470\" & type==\"00\" ~ \"976\", # object 4470 is grants to local governments\n                    object==\"4491\" & (fund==\"0188\"|fund==\"0189\") ~ \"976\",\n                     fund==\"0187\" & object==\"4470\" ~ \"976\",\n                     fund==\"0186\" & object==\"4470\" ~ \"976\",\n                    object==\"4491\" & (fund==\"0413\"|fund==\"0414\"|fund==\"0415\")  ~ \"975\", #mft to local\n                  fund == \"0952\"~ \"975\", # Added Sept 29 2022 AWM. Transportation Renewal MFT\n                    TRUE ~ as.character(agency)),\n  \n  agency_name = case_when(agency == \"971\"~ \"INCOME TAX 1/10 TO LOCAL\",\n                          agency == \"972\" ~ \"PPRT TRANSFER TO LOCAL\",\n                          agency == \"975\" ~ \"MFT TO LOCAL\",\n                          agency == \"976\" ~ \"GST TO LOCAL\",\n                          TRUE~as.character(agency_name)),\n  group = ifelse(agency&gt;\"970\" & agency &lt; \"977\", as.character(agency), as.character(group)))\n\n\n\n\nCode\ntransfers_long &lt;- exp_temp %&gt;% \n  filter(group == \"971\" |group == \"972\" | group == \"975\" | group == \"976\")\n\ntransfers_long %&gt;% \n  group_by(agency_name, group, fy) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE) )%&gt;% \n  ggplot() + \n  geom_line(aes(x=fy, y = expenditure, color=agency_name)) + \n  theme_classic()+\n  theme(legend.position = \"bottom\", legend.title=element_blank())+\n  labs(title = \"Transfers to Local Governments\", \n       caption = \"Data Source: Illinois Office of the Comptroller\")\n\ntransfers &lt;- transfers_long %&gt;%\n  group_by(fy, group ) %&gt;%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\", names_prefix = \"exp_\" )\n\nexp_temp &lt;- anti_join(exp_temp, transfers_long)\n\n\ndropped_inff_0 &lt;- exp_temp %&gt;% filter(in_ff == 0)\n\nexp_temp &lt;- exp_temp %&gt;% filter(in_ff == 1) # drops in_ff = 0 funds AFTER dealing with net-revenue above\n\n\n\n\n\nFigure 2.5: Drop Transfers from State to Local Governments\n\n\n\n\n\n\n\n\nThe Local Transfers from the Personal Property Replacement Tax (fund 802) increased over $2 billion from corporate income taxes alone. Personal property replacement taxes (PPRT) are revenues collected by the state of Illinois and paid to local governments to replace money that was lost by local governments when their powers to impose personal property taxes on corporations, partnerships, and other business entities were taken away.\n\n\n2.1.6 Debt Service\nDebt Service expenditures include interest payment on both short-term and long-term debt. We do not include escrow or principal payments.\nDecision from Sept 30 2022: We are no longer including short term principal payments as a cost; only interest on borrowing is a cost. Pre FY22 and the FY21 correction, we did include an escrow payment and principle payments as costs but not bond proceeds as revenues. This caused expenditures to be inflated because we were essentially counting debt twice - the principle payment and whatever the money was spent on in other expenditure categories, which was incorrect.\n\n\nCode\ndebt_drop &lt;- exp_temp %&gt;% \n  filter(object == \"8841\" |  object == \"8811\")  \n# escrow  OR  principle\n\n#debt_drop %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy)\n\n\ndebt_keep &lt;- exp_temp %&gt;% \n  filter(fund != \"0455\" & (object == \"8813\" | object == \"8800\" )) \n# examine the debt costs we want to include\n\n#debt_keep %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy) \n\n\nexp_temp &lt;- anti_join(exp_temp, debt_drop) \nexp_temp &lt;- anti_join(exp_temp, debt_keep)\n\ndebt_keep &lt;- debt_keep %&gt;%\n  mutate(\n    agency = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(agency)),\n    group = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(group)),\n    in_ff = ifelse(group == \"903\", 1, as.character(in_ff)))\n\ndebt_keep_yearly &lt;- debt_keep %&gt;% group_by(fy, group) %&gt;% summarize(debt_cost = sum(expenditure,na.rm=TRUE)/1000000) %&gt;% select(-group)\n\n\n\n\n2.1.7 Medicaid\nMedicaid. That portion of the Healthcare and Family Services (or Public Aid in earlier years, agency code 478) budget for Medical (appr_organization code 65) for awards and grants (object codes 4400 and 4900).\n\nState CURE will remain in the Medicaid expenditure category due to the nature of it being federal funds providing public health services and funding to locations that provide public services.\n\n\nUses same appropriation name of “HEALTHCARE PROVIDER RELIEF” and fund == 0793 and obj_seq_type == 49000000. So can defend the “mistake” of including healthcare provider relief as Medicaid expenditure.\n\n\n\n2.1.8 Add Other Fiscal Future group codes\n\n\nCode\nexp_temp &lt;- exp_temp %&gt;%\n  #mutate(agency = as.numeric(agency) ) %&gt;%\n  # arrange(agency)%&gt;%\n  mutate(\n    group = case_when(\n      agency&gt;\"100\"& agency&lt;\"200\" ~ \"910\", # legislative\n      \n      agency == \"528\"  | (agency&gt;\"200\" & agency&lt;\"300\") ~ \"920\", # judicial\n      pension&gt;0  ~ \"901\", # pensions\n      (agency&gt;\"309\" & agency&lt;\"400\") ~ \"930\",    # elected officers\n      \n      agency == \"586\" ~ \"959\", # create new K-12 group\n\n      agency==\"402\" | agency==\"418\" | agency==\"478\" | agency==\"444\" | agency==\"482\" ~ as.character(agency), # aging, CFS, HFS, human services, public health\n      T ~ as.character(group))\n    ) %&gt;%      \n\n  \n  mutate(group = case_when(\n    agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\") ~ \"945\", # separates CHIP from health and human services and saves it as Medicaid\n    \n    agency == \"586\" & fund == \"0355\" ~ \"945\",  # 586 (Board of Edu) has special education which is part of medicaid\n    \n    # OLD CODE: agency == \"586\" & appr_org == \"18\" ~ \"945\", # Spec. Edu Medicaid Matching\n    \n    agency==\"425\" | agency==\"466\" | agency==\"546\" | agency==\"569\" | agency==\"578\" | agency==\"583\" | agency==\"591\" | agency==\"592\" | agency==\"493\" | agency==\"588\" ~ \"941\", # public safety & Corrections\n    \n    agency==\"420\" | agency==\"494\" |  agency==\"406\" | agency==\"557\" ~ as.character(agency), # econ devt & infra, tollway\n    \n    agency==\"511\" | agency==\"554\" | agency==\"574\" | agency==\"598\" ~ \"946\",  # Capital improvement\n    \n    agency==\"422\" | agency==\"532\" ~ as.character(agency), # environment & nat. resources\n    \n    agency==\"440\" | agency==\"446\" | agency==\"524\" | agency==\"563\"  ~ \"944\", # business regulation\n    \n    agency==\"492\" ~ \"492\", # revenue\n    \n    agency == \"416\" ~ \"416\", # central management services\n    agency==\"448\" & fy &gt; 2016 ~ \"416\", #add DoIT to central management \n    \n    T ~ as.character(group))) %&gt;%\n  \n  \n  mutate(group = case_when(\n    # agency==\"684\" | agency==\"691\"  ~ as.character(agency), # moved under higher education in next line. 11/28/2022 AWM\n    \n    agency==\"692\" | agency==\"695\" | agency == \"684\" |agency == \"691\" | (agency&gt;\"599\" & agency&lt;\"677\") ~ \"960\", # higher education\n    \n    agency==\"427\"  ~ as.character(agency), # employment security\n    \n    agency==\"507\"|  agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ \"948\", # other departments\n    \n    # other boards & Commissions\n    agency==\"503\" | agency==\"509\" | agency==\"510\" | agency==\"565\" |agency==\"517\" | agency==\"525\" | agency==\"526\" | agency==\"529\" | agency==\"537\" | agency==\"541\" | agency==\"542\" | agency==\"548\" |  agency==\"555\" | agency==\"558\" | agency==\"559\" | agency==\"562\" | agency==\"564\" | agency==\"568\" | agency==\"579\" | agency==\"580\" | agency==\"587\" | agency==\"590\" | agency==\"527\" | agency==\"585\" | agency==\"567\" | agency==\"571\" | agency==\"575\" | agency==\"540\" | agency==\"576\" | agency==\"564\" | agency==\"534\" | agency==\"520\" | agency==\"506\" | agency == \"533\" ~ \"949\", \n    \n    # non-pension expenditures of retirement funds moved to \"Other Departments\"\n    # should have removed pension expenditures already from exp_temp in Pensions step above\n    agency==\"131\" | agency==\"275\" | agency==\"589\" |agency==\"593\"|agency==\"594\"|agency==\"693\" ~ \"948\",\n    \n    T ~ as.character(group))) %&gt;%\n\n  mutate(group_name = \n           case_when(\n             group == \"416\" ~ \"Central Management\",\n             group == \"478\" ~ \"Healthcare and Family Services\",\n             group == \"482\" ~ \"Public Health\",\n             group == \"900\" ~ \"NOT IN FRAME\",\n             group == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             group == \"903\" ~ \"DEBT SERVICE\",\n             group == \"910\" ~ \"LEGISLATIVE\"  ,\n             group == \"920\" ~ \"JUDICIAL\" ,\n             group == \"930\" ~ \"ELECTED OFFICERS\" , \n             group == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             group == \"941\" ~ \"PUBLIC SAFETY\" ,\n             group == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             group == \"943\" ~ \"CENTRAL SERVICES\",\n             group == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             group == \"945\" ~ \"MEDICAID\" ,\n             group == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             group == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             group == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             group == \"959\" ~ \"K-12 EDUCATION\" ,\n             group == \"960\" ~ \"UNIVERSITY EDUCATION\" ,\n             group == agency ~ as.character(group),\n             TRUE ~ \"Check name\"),\n         year = fy)\n\nexp_temp %&gt;% filter(group_name == \"Check name\")\n\n\n\n  \n\n\n\nCode\n#write_csv(exp_temp, \"all_expenditures_recoded.csv\")\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAll expenditures recoded but not aggregated: Allows for inspection of individual expenditures within larger categories. This stage of the data is extremely useful for investigating how individual items have been coded before they are aggregated into larger categories.",
    "crumbs": [
      "About",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#modify-revenue-data",
    "href": "Everything.html#modify-revenue-data",
    "title": "2  Calculating the Fiscal Gap",
    "section": "2.2 Modify Revenue data",
    "text": "2.2 Modify Revenue data\nRevenue Categories NOT included in Fiscal Futures:\n- 32. Garnishment-Levies. (State is fiduciary, not beneficiary.)\n- 45. Student Fees-Universities. (Excluded from state-level budget.)\n- 51. Retirement Contributions (of individuals and non-state entities).\n- 66. Proceeds, Investment Maturities. (Not sustainable flow.)\n- 72. Bond Issue Proceeds. (Not sustainable flow.)\n- 75. Inter-Agency Receipts.\n- 79. Cook County Intergovernmental Transfers. (State is not beneficiary.)\n- 98. Prior Year Refunds.\n- 99. Statutory Transfers.\nAll Other Sources\nExpanded to include the following smaller sources:\n- 30. Horse Racing Taxes & Fees.\n- 60. Other Grants and Contracts.\n- 63. Investment Income.\nFor aggregating revenue, use the rev_1998_2022 dataframe, join the funds_ab_in_2022 file to it, and then join the ioc_source_type file to the dataset. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\n\nCode\n# recodes old agency numbers to consistent agency number\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --&gt; coded as  financial and professional reg\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n\n\n2.2.1 Federal to State Transfers\nFor an deeper look at federal revenue to Illinois, ?sec-covid-federal-funds.\n\n\nCode\n#rev_temp &lt;- rev_temp %&gt;% filter(in_ff==1)\n\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %&gt;% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %&gt;% \n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %&gt;% \n  ggplot() +\n      geom_recessions(xformay = \"numeric\",text = FALSE)+\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\nFigure 2.6\n\n\n\n\n\n\n\n\nDropping State CURE Revenue\nThe Fiscal Futures model focuses on sustainable revenue sources. To understand our fiscal gap and outlook, we need to exclude these one time revenues. GOMB has emphasized that they have allocated COVID dollars to one time expenditures (unemployment trust fund, budget stabilization fund, etc.). The fiscal gap, graphs,and CAGRs have been recalculated in the [Drop COVID Dollars] section below.\n\nNOTE: The code chunk below only drops revenue sources with the source name of “Federal Stimulus Package” (which is the State and Local CURE revenue). Additional federal money went into other funds during the beginning of pandemic. Many departments saw increased grants and received other funds (e.g. funds)\n\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% mutate(covid_dollars = ifelse(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\",1,0))\n\nrev_temp %&gt;% filter(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %&gt;%\n  group_by(fy) %&gt;% summarize(Received = sum(receipts))\n\n\n\n  \n\n\n\n\n\n2.2.2 Health Insurance Premiums from Employees\nInsurance premiums for employees is coded below but it is NOT used in the fiscal futures model. Employee and employer premiums are considered rev_51 and dropped from analysis in later step.\n\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n\nCode\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    #variable not used in aggregates, but could be interesting for other purposes\n    employee_premiums = ifelse(fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source&gt;\"0345\" & source&lt;\"0357\")|(source&gt;\"2199\" & source&lt;\"2209\")), 1, 0),\n    \n    # adds more rev_type codes\n    rev_type = case_when(\n      fund ==\"0427\" ~ \"12\", # pub utility tax\n      fund == \"0742\" | fund == \"0473\" ~ \"24\", # insurance and fees\n      fund == \"0976\" ~ \"36\",# receipts from rev producing\n      fund == \"0392\" |fund == \"0723\" ~ \"39\", # licenses and fees\n      fund == \"0656\" ~ \"78\", #all other rev sources\n      TRUE ~ as.character(rev_type)))\n# if not mentioned, then rev_type as it was\n\n\n\n# # optional insurance premiums = employee insurance premiums\n\n# emp_premium &lt;- rev_temp %&gt;%\n#   group_by(fy, employee_premiums) %&gt;%\n#   summarize(employee_premiums_sum = sum(receipts)/1000000) %&gt;%\n#   filter(employee_premiums == 1) %&gt;%\n#   rename(year = fy) %&gt;% \n#   select(-employee_premiums)\n\nemp_premium_long &lt;- rev_temp %&gt;%  filter(employee_premiums == 1)\n# 381 observations have employee premiums == 1\n\n\n# drops employee premiums from revenue\n# rev_temp &lt;- rev_temp %&gt;% filter(employee_premiums != 1)\n# should be dropped in next step since rev_type = 51\n\n\nNote: In FY21, employee premiums were subtracted from state healthcare costs on the expenditure side to calculate a “Net Healthcare Cost” but that methodology has been discontinued. Totals were practically unchanged: revenue from employee premiums is also very small.\n\n\n2.2.3 Transfers in and Out:\nFunds that hold and disperse local taxes or fees are dropped from the analysis. Then other excluded revenue types are also dropped.\nDrops Blank, Student Fees, Retirement contributions, proceeds/investments, bond issue proceeds, interagency receipts, cook IGT, Prior year refunds:\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% \n  filter(in_ff == 1) %&gt;% \n  mutate(local = ifelse(is.na(local), 0, local)) %&gt;% # drops all revenue observations that were coded as \"local == 1\"\n  filter(local != 1)\n\n# 1175 doesnt exist?\nin_from_out &lt;- c(\"0847\", \"0867\", \"1175\", \"1176\", \"1177\", \"1178\", \"1181\", \"1182\", \"1582\", \"1592\", \"1745\", \"1982\", \"2174\", \"2264\")\n\n# what does this actually include:\n# all are items with rev_type = 75 originally. \nin_out_df &lt;- rev_temp %&gt;%\n  mutate(infromout = ifelse(source %in% in_from_out, 1, 0)) %&gt;%\n  filter(infromout == 1)\n\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(rev_type_new = ifelse(source %in% in_from_out, \"76\", rev_type))\n# if source contains any of the codes in in_from_out, code them as 76 (all other rev).\n# I end up excluding rev_76 in later steps\n\n\n\n\nCode\n# revenue types to drop\ndrop_type &lt;- c(\"32\", \"45\", \"51\", \n               \"66\", \"72\", \"75\", \"76\", \"79\", \"98\", \"99\")\n\n# drops Blank, Student Fees, Retirement contributions, proceeds/investments,\n# bond issue proceeds, interagency receipts, cook IGT, Prior year refunds.\n\n\nrev_temp &lt;- rev_temp %&gt;% filter(!rev_type_new %in% drop_type)\n# keep observations that do not have a revenue type mentioned in drop_type\n\ntable(rev_temp$rev_type_new)\n\n\n\n   02    03    06    09    12    15    18    21    24    27    30    31    33 \n  177   132   852   134   593   269    47  1421   473    79   665   130   141 \n   35    36    39    42    48    54    57    58    59    60    63    78 \n  691  5328  9487  2939    32  1283  6683   646   233   105  5321 11712 \n\n\nCode\nrev_temp %&gt;% \n  group_by(fy, rev_type_new) %&gt;% \n  summarize(total_reciepts = sum(receipts)/1000000) %&gt;%\n  pivot_wider(names_from = rev_type_new, values_from = total_reciepts, names_prefix = \"rev_\") \n\n\n\n  \n\n\n\nCode\n# combines smallest 4  categories to to \"Other\"\n# they were the 4 smallest in past years, are they still the 4 smallest? \n\nrev_temp &lt;- rev_temp %&gt;%  \n mutate(rev_type_new = ifelse(rev_type==\"30\" | rev_type==\"60\" | rev_type==\"63\" ,\n                            ##  | rev_type==\"76\", \n                              \"78\", rev_type_new))\n\n\n#table(rev_temp$rev_type_new)  # check work\n\n\n\nrm(rev_1998_2022)\nrm(exp_1998_2022)\n\n\n#write.csv(exp_temp, \"exp_fy22_recoded_12192022.csv\")\n#write.csv(rev_temp, \"rev_fy22_recoded_12192022.csv\")",
    "crumbs": [
      "About",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#pivoting-and-merging",
    "href": "Everything.html#pivoting-and-merging",
    "title": "2  Calculating the Fiscal Gap",
    "section": "2.3 Pivoting and Merging",
    "text": "2.3 Pivoting and Merging\n\nLocal Government Transfers (exp_970) should be on the expenditure side\n\n\n2.3.1 Revenues\n\n\n\nCode\nff_rev &lt;- rev_temp %&gt;% \n  group_by(rev_type_new, fy) %&gt;% \n  summarize(sum_receipts = sum(receipts, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"rev_type_new\", values_from = \"sum_receipts\", names_prefix = \"rev_\")\n\n# ff_rev&lt;- left_join(ff_rev, tax_refund)\n\n#ff_rev &lt;- left_join(ff_rev, pension2_fy22, by=c(\"fy\" = \"year\"))\n\n#ff_rev &lt;- left_join(ff_rev, eehc2_amt) \nff_rev &lt;- mutate_all(ff_rev, ~replace_na(.,0))\n\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   mutate(rev_02 = rev_02 - ref_02,\n#          rev_03 = rev_03 - ref_03,\n#          rev_06 = rev_06 - ref_06,\n#          rev_09 = rev_09 - ref_09,\n#          rev_21 = rev_21 - ref_21,\n#          rev_24 = rev_24 - ref_24,\n#          rev_35 = rev_35 - ref_35\n# \n#       #   rev_78new = rev_78 #+ pension_amt #+ eehc\n#          ) %&gt;% \n#   select(-c(ref_02:ref_35, rev_99, rev_NA, rev_76\n#             #, ref_CHECK#, pension_amt , rev_76,\n#           #  , eehc\n#             ))\n# \n# ff_rev\n\n\n\n#noproblem &lt;- c(0)  # if ref_CHECK = $0, then there is no problem. :) \n# \n# if((sum(ff_rev$ref_CHECK) == 0 )){\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   \n#   mutate(rev_02 = rev_02 - ref_02,\n#          rev_03 = rev_03 - ref_03,\n#          rev_06 = rev_06 - ref_06,\n#          rev_09 = rev_09 - ref_09,\n#          rev_21 = rev_21 - ref_21,\n#          rev_24 = rev_24 - ref_24,\n#          rev_35 = rev_35 - ref_35\n#          ) %&gt;% \n#   select(-c(ref_02:ref_35, rev_99, rev_76, ref_CHECK )) \n# }else{\"You have a problem! Check what revenue items did not have rev codes (causing it to be coded as rev_NA) or the check if there were refunds that were not assigned revenue codes (tax_refunds_long objects)\"}\n\nff_rev %&gt;%  mutate_all(., ~round(.,digits=0))\n\n\n\n\nTable 2.1: Pivoted Revenue Table ($ Millions) - Intermediate Step\n\n\n\n\n  \n\n\n\n\n\n\nSince I already pivot_wider()ed the table in the previous code chunk, I now change each column’s name by using rename() to set new variable names. Ideally the final dataframe would have both the variable name and the variable label but I have not done that yet.\n\n\nCode\naggregate_rev_labels &lt;- ff_rev %&gt;%\n  rename(\"INDIVIDUAL INCOME TAXES, gross of local, net of refunds\" = rev_02,\n         \"CORPORATE INCOME TAXES, gross of PPRT, net of refunds\" = rev_03,\n         \"SALES TAXES, gross of local share\" = rev_06 ,\n         \"MOTOR FUEL TAX, gross of local share, net of refunds\" = rev_09 ,\n         \"PUBLIC UTILITY TAXES, gross of PPRT\" = rev_12,\n         \"CIGARETTE TAXES\" = rev_15 ,\n         \"LIQUOR GALLONAGE TAXES\" = rev_18,\n         \"INHERITANCE TAX\" = rev_21,\n         \"INSURANCE TAXES&FEES&LICENSES, net of refunds\" = rev_24 ,\n         \"CORP FRANCHISE TAXES & FEES\" = rev_27,\n       # \"HORSE RACING TAXES & FEES\" = rev_30,  # in Other\n         \"MEDICAL PROVIDER ASSESSMENTS\" = rev_31 ,\n         # \"GARNISHMENT-LEVIES \" = rev_32 , # dropped\n         \"LOTTERY RECEIPTS\" = rev_33 ,\n         \"OTHER TAXES\" = rev_35,\n         \"RECEIPTS FROM REVENUE PRODUCNG\" = rev_36, \n         \"LICENSES, FEES & REGISTRATIONS\" = rev_39 ,\n         \"MOTOR VEHICLE AND OPERATORS\" = rev_42 ,\n         #  \"STUDENT FEES-UNIVERSITIES\" = rev_45,   # dropped\n         \"RIVERBOAT WAGERING TAXES\" = rev_48 ,\n         # \"RETIREMENT CONTRIBUTIONS \" = rev_51, # dropped\n         \"GIFTS AND BEQUESTS\" = rev_54, \n         \"FEDERAL OTHER\" = rev_57 ,\n         \"FEDERAL MEDICAID\" = rev_58, \n         \"FEDERAL TRANSPORTATION\" = rev_59 ,\n         #\"OTHER GRANTS AND CONTRACTS\" = rev_60, #other\n       # \"INVESTMENT INCOME\" = rev_63, # other\n         # \"PROCEEDS,INVESTMENT MATURITIES\" = rev_66 , #dropped\n         # \"BOND ISSUE PROCEEDS\" = rev_72,  #dropped\n         # \"INTER-AGENCY RECEIPTS\" = rev_75,  #dropped\n      #  \"TRANSFER IN FROM OUT FUNDS\" = rev_76,  #other\n         \"ALL OTHER SOURCES\" = rev_78,\n         # \"COOK COUNTY IGT\" = rev_79, #dropped\n         # \"PRIOR YEAR REFUNDS\" = rev_98 #dropped\n  ) \n\naggregate_rev_labels %&gt;% mutate_all(., ~round(., digits = 0))\n\n\n\n\nTable 2.2: Aggregated Revenue Categories ($ Millions), with old labels\n\n\n\n\n  \n\n\n\n\n\n\n\n\n2.3.2 Expenditures\nCreate exp_970 for all local government transfers (exp_971 + exp_972 + exp_975 + exp_976).\n\n\nCode\nff_exp &lt;- exp_temp %&gt;% \n  group_by(fy, group) %&gt;% \n  summarize(sum_expenditures = sum(expenditure, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditures\", names_prefix = \"exp_\")%&gt;%\n  \n    left_join(debt_keep_yearly) %&gt;%\n  mutate(exp_903 = debt_cost) %&gt;%\n\n  #  left_join(healthcare_costs_yearly) %&gt;%\n\n  # join state employee healthcare and subtract employee premiums\n  # left_join(emp_premium, by = c(\"fy\" = \"year\")) %&gt;%\n#  mutate(exp_904_new = (`healthcare_cost` - `employee_premiums_sum`)) %&gt;% # state employee healthcare premiums\n  \n # left_join(retirement_contributions) %&gt;%\n  #    mutate(exp_901_new = exp_901 - contributions/1000000) %&gt;% #employee pension contributions\n\n\n  # join local transfers and create exp_970\n  left_join(transfers) %&gt;%\n  mutate(exp_970 = exp_971 + exp_972  + exp_975 + exp_976)\n\nff_exp&lt;- ff_exp %&gt;% \n  select(-c(debt_cost, exp_971:exp_976)) # drop unwanted columns\n\nff_exp # not labeled\n\n\n\n\nTable 2.3: Pivoted Expenditure Categories ($ Millions)\n\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\n# exp_temp %&gt;%\n#   group_by(year, group) %&gt;%\n#   summarize(sum_expenditure = round(sum(expenditure)/1000000)) %&gt;%\n#   arrange(year) %&gt;%\n#   pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\")\n# \n\naggregate_exp_labeled &lt;- exp_temp %&gt;%\n  group_by(year, group_name) %&gt;%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %&gt;%\n  arrange(year) %&gt;%\n  pivot_wider(names_from = \"group_name\", values_from = \"sum_expenditure\")\n\naggregate_exp_labeled %&gt;% mutate_all(., ~round(., digits = 0))\n\n\n\n\nTable 2.4: Final Expenditure Categories, with Fiscal Futures Grouped Expenditure Categories",
    "crumbs": [
      "About",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#summary-tables---largest-categories",
    "href": "Everything.html#summary-tables---largest-categories",
    "title": "2  Calculating the Fiscal Gap",
    "section": "4.1 Summary Tables - Largest Categories",
    "text": "4.1 Summary Tables - Largest Categories\nThe 10 largest revenue sources and 15 largest expenditure sources remain separate categories and all other smaller sources/expenditures are combined into “All Other Revenues (Expenditures)”. These condensed tables are typically used in the Fiscal Futures articles. They were manually created in past years but this hopefully automates the process a bit until final formatting stages.\n\ntake ff_rev and ff_exp data frames, which were in wide format, pivot them longer and mutate the Category_name variable to nicer labels. Keep largest categories separate and aggregate the rest.\nYou need to manually comment out the categories that are not the largest each year. Check and compare to the previous years largest categories!\n\n\n\nCode\nexp_totals &lt;- ff_exp %&gt;% rowwise() %&gt;% mutate(exp_TOTALS = sum(across(exp_402:exp_970))) # creates total column too\n\nrev_totals &lt;- ff_rev %&gt;% rowwise() %&gt;%  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long_majorcats &lt;- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy) %&gt;%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"Income Tax\" ,\n    Category == \"03\" ~ \"Corporate Income Tax\" ,\n    Category == \"06\" ~ \"Sales Tax\" ,\n    Category == \"09\" ~ \"Motor Fuel Taxes\" ,\n    #   Category == \"12\" ~ \"PUBLIC UTILITY TAXES, gross of PPRT\" ,\n    #  Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    #   Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    #  Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    #  Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES, net of refunds \" ,\n    # Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    #   Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"Medical Provider Assessments\" ,\n    #  Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    #  Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    # Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"Receipts from Revenue Producing\", \n    Category == \"39\" ~  \"Licenses, Fees, Registration\" ,\n    # Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    #    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    #    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    #  Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    # Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"Federal Other\" ,\n    Category == \"58\" ~  \"Federal Medicaid Reimbursements\", \n    Category == \"59\" ~  \"Federal Transportation\" ,\n    #   Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    #    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    #   Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    #   Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    #   Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    #   Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    # Category == \"78new\" ~  \"ALL OTHER SOURCES\" ,\n    # Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    #   Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\n    \n    Category == \"TOTALS\" ~ \"Total Revenue\",\n    T ~ \"All Other Sources **\" # any other Category number that was not specifically referenced is combined into Other Revenue Sources\n    \n  ) ) %&gt;% \n  select(-type, -Category) %&gt;%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %&gt;%\n  summarise(Dollars= round(sum(Dollars),digits=2)) \n\n# revenue_wide # not actually in wide format yet. \n# has 10 largest rev sources separate and combined all others to Other in long data format. \n\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide_majorcats &lt;- rev_long_majorcats %&gt;% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  relocate(\"All Other Sources **\", .after = last_col()) %&gt;%\n  relocate(\"Total Revenue\", .after =  last_col()) \n\n\nexp_long_majorcats &lt;- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy ) %&gt;% \n  mutate(Category_name = \n           case_when(\n          #   Category == \"402\" ~ \"Aging\" ,\n          #  Category == \"406\" ~ \"AGRICULTURE\", \n         #    Category == \"416\" ~ \"Central Management\",\n             Category == \"418\" ~ \"Children & Family Services\", \n             Category == \"420\" ~ \"Community Development\",\n           #  Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"Corrections\",\n           #  Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           #  Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n           #  Category == \"482\" ~ \"PUBLIC HEALTH\", \n             Category == \"492\" ~ \"Revenue\", \n             Category == \"494\" ~ \"Transportation\" ,\n           #  Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n           #  Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n            # Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n           #  Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n           #  Category == \"910\" ~ \"LEGISLATIVE\"  ,\n          #   Category == \"920\" ~ \"JUDICIAL\" ,\n         #   Category == \"930\" ~ \"Elected Officers\" , \n            # Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n           #  Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n           #  Category == \"943\" ~ \"CENTRAL SERVICES\",\n           #  Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n          #   Category == \"946\" ~ \"Capital Improvement\" , \n           #  Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n            # Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n             Category == \"960\" ~ \"University Education\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total Expenditures\",\n             T ~ \"All Other Expenditures **\")\n           ) %&gt;% \n  select(-type, -Category) %&gt;% \n  group_by(Year, Category_name) %&gt;% \n  summarise(Dollars= round(sum(Dollars),digits=2))\n\nexpenditure_wide_majorcats &lt;- exp_long_majorcats %&gt;% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  relocate(\"All Other Expenditures **\", .after = last_col()) %&gt;%\n  relocate(\"Total Expenditures\", .after =  last_col())\n\n\n# CAGR values for largest expenditure categories and combined All Other Expenditures\n\n# function for calculating the CAGR\ncalc_cagr &lt;- function(df, n) {\n  df &lt;- exp_long_majorcats %&gt;%\n    #select(-type) %&gt;%\n    arrange(Category_name, Year) %&gt;%\n    group_by(Category_name) %&gt;%\n    mutate(cagr = ((`Dollars` / lag(`Dollars`, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_25 &lt;- calc_cagr(exp_long_majorcats, 25) %&gt;% \n  # group_by(Category) %&gt;%\n  summarize(cagr_25 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr23_precovid &lt;- exp_long_majorcats %&gt;%\n  filter(Year &lt;= 2019) %&gt;%\n  calc_cagr(21) %&gt;% \n  summarize(cagr_21 = round(sum(cagr*100, na.rm = TRUE), 2))\n\n\n\ncagr_10 &lt;- calc_cagr(exp_long_majorcats, 10) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_10 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 &lt;- calc_cagr(exp_long_majorcats, 5) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_5 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 &lt;- calc_cagr(exp_long_majorcats, 3) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_3 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 &lt;- calc_cagr(exp_long_majorcats, 2) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_2 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_1 &lt;- calc_cagr(exp_long_majorcats, 1) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_1 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_expenditures_majorcats_tot &lt;- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_25 ) %&gt;% \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %&gt;% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"25-Year CAGR\" = cagr_25 )\n\nmove_to_last &lt;- function(df, n) df[c(setdiff(seq_len(nrow(df)), n), n), ]\n\nCAGR_expenditures_majorcats_tot &lt;- move_to_last(CAGR_expenditures_majorcats_tot, 1)\nCAGR_expenditures_majorcats_tot &lt;- move_to_last(CAGR_expenditures_majorcats_tot, 14) \n\n\nCAGR_expenditures_majorcats_tot%&gt;%   \n  kbl(caption = \"CAGR Calculations for Largest Expenditure Categories\" , row.names=FALSE) %&gt;% \n     kable_classic()  %&gt;%\n    row_spec(17, bold = T, color = \"black\", background = \"gray\")\ncurrent_year &lt;- 2023\nlast_year &lt;- 2022\n\n# Yearly change for Top 13 largest expenditure categories\nexpenditure_change_majorcats &lt;- exp_long_majorcats %&gt;%\n  filter(Year &gt; 2021) %&gt;%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %&gt;%\n  mutate(\"FY 2023 ($ Billions)\" = round(Dollars_2023/1000, digits = 1),\n         \"FY 2022 ($ Billions)\" = round(Dollars_2022/1000, digits = 1),\n         \"1-Year Change\" = percent((Dollars_2023 -Dollars_2022)/Dollars_2022, accuracy = .1) )  %&gt;%\n  left_join(CAGR_expenditures_majorcats_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %&gt;% \n  arrange(-`FY 2023 ($ Billions)`)%&gt;%\n  mutate(`25-Year CAGR` = percent(`25-Year CAGR`/100, accuracy=.1)) %&gt;%\n  select(-c(Dollars_2023, Dollars_2022, `1 Year CAGR`:`10 Year CAGR`)) %&gt;%\n  rename( \"25-Year CAGR\" = `25-Year CAGR`, \n          \"Expenditure Category\" = Category_name )\n\nexpenditure_change_majorcats &lt;- move_to_last(expenditure_change_majorcats, 4) \n\nexpenditure_change_majorcats &lt;- move_to_last(expenditure_change_majorcats, 1)\n\nexpenditure_change_majorcats %&gt;% \n  kbl(caption = \"Yearly Change in Expenditures\", row.names = FALSE, align = \"l\") %&gt;% \n  kable_classic() %&gt;%\n    row_spec(17, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 4.3: Largest Expenditure Categories with CAGRs\n\n\n\n\n\nCAGR Calculations for Largest Expenditure Categories\n\n\nExpenditure Category\n1 Year CAGR\n2 Year CAGR\n3 Year CAGR\n5 Year CAGR\n10 Year CAGR\n25-Year CAGR\n\n\n\n\nChildren & Family Services\n25.99\n10.03\n8.40\n7.78\n3.33\n0.78\n\n\nCommunity Development\n7.71\n-5.46\n34.18\n24.63\n4.34\n4.79\n\n\nCorrections\n13.46\n2.80\n3.47\n-2.65\n3.13\n2.21\n\n\nDebt Service\n-2.89\n-1.86\n0.07\n-0.20\n0.80\n5.73\n\n\nHuman Services\n21.34\n16.10\n13.77\n10.19\n4.64\n3.29\n\n\nK-12 Education\n9.86\n9.86\n9.15\n7.04\n5.35\n4.35\n\n\nLocal Govt Revenue Sharing\n5.36\n23.23\n19.08\n12.02\n6.46\n4.68\n\n\nMedicaid\n13.10\n11.05\n13.29\n11.76\n8.17\n7.43\n\n\nPublic Safety\n1.18\n-6.87\n5.37\n14.12\n7.58\n5.69\n\n\nRevenue\n66.68\n34.85\n39.16\n41.42\n22.02\n8.14\n\n\nState Employee Healthcare\n-0.09\n2.08\n0.23\n-12.49\n3.28\n5.82\n\n\nState Pension Contribution\n5.06\n10.12\n8.85\n9.54\n9.06\n10.52\n\n\nTollway\n-9.89\n-1.78\n-0.41\n5.23\n7.14\n6.78\n\n\nTransportation\n16.29\n-2.95\n7.20\n6.92\n1.59\n3.80\n\n\nUniversity Education\n12.52\n7.50\n5.01\n4.60\n0.98\n0.81\n\n\nAll Other Expenditures **\n14.36\n6.62\n8.02\n6.78\n4.16\n5.66\n\n\nTotal Expenditures\n11.91\n9.69\n11.03\n8.30\n5.85\n5.23\n\n\n\n\n\n\n\n\n\n\nYearly Change in Expenditures\n\n\nExpenditure Category\nFY 2023 ($ Billions)\nFY 2022 ($ Billions)\n1-Year Change\n25-Year CAGR\n\n\n\n\nMedicaid\n32.4\n28.7\n13.1%\n7.4%\n\n\nK-12 Education\n14.7\n13.4\n9.9%\n4.3%\n\n\nLocal Govt Revenue Sharing\n10.9\n10.3\n5.4%\n4.7%\n\n\nHuman Services\n8.8\n7.3\n21.3%\n3.3%\n\n\nState Pension Contribution\n6.8\n6.5\n5.1%\n10.5%\n\n\nTransportation\n5.0\n4.3\n16.3%\n3.8%\n\n\nRevenue\n3.1\n1.9\n66.7%\n8.1%\n\n\nState Employee Healthcare\n3.0\n3.0\n-0.1%\n5.8%\n\n\nUniversity Education\n2.5\n2.3\n12.5%\n0.8%\n\n\nDebt Service\n2.0\n2.0\n-2.9%\n5.7%\n\n\nTollway\n1.9\n2.1\n-9.9%\n6.8%\n\n\nCorrections\n1.7\n1.5\n13.5%\n2.2%\n\n\nPublic Safety\n1.7\n1.7\n1.2%\n5.7%\n\n\nChildren & Family Services\n1.6\n1.3\n26.0%\n0.8%\n\n\nCommunity Development\n1.5\n1.4\n7.7%\n4.8%\n\n\nAll Other Expenditures **\n14.0\n12.2\n14.4%\n5.7%\n\n\nTotal Expenditures\n111.7\n99.8\n11.9%\n5.2%\n\n\n\n\n\n\n\n\n\n\n\nTop 10 revenue sources CAGRs and Yearly Change Tables:\n\n\nCode\n##### Top 10 revenue CAGRs: ####\n\n\ncalc_cagr &lt;- function(df, n) {\n  df &lt;- rev_long_majorcats %&gt;%\n    arrange(Category_name, Year) %&gt;%\n    group_by(Category_name) %&gt;%\n    mutate(cagr = ((Dollars / lag(Dollars, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_25 &lt;- calc_cagr(rev_long_majorcats, 25) %&gt;% \n     # group_by(Category) %&gt;%\n  summarize(cagr_25 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr_10 &lt;- calc_cagr(rev_long_majorcats, 10) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_10 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 &lt;- calc_cagr(rev_long_majorcats, 5) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_5 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 &lt;- calc_cagr(rev_long_majorcats, 3) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_3 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 &lt;- calc_cagr(rev_long_majorcats, 2) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_2 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\n cagr_1 &lt;- calc_cagr(rev_long_majorcats, 1) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_1 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_revenue_majorcats_tot &lt;- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_25) %&gt;%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %&gt;% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10, \"25-Year CAGR\" = cagr_25 )\n\nCAGR_revenue_majorcats_tot &lt;- move_to_last(CAGR_revenue_majorcats_tot,1)\nCAGR_revenue_majorcats_tot &lt;- move_to_last(CAGR_revenue_majorcats_tot,11)\n\nCAGR_revenue_majorcats_tot %&gt;% \n  kbl(caption = \"CAGR Calculations for Largest Revenue Sources\", row.names = FALSE) %&gt;% \n  kable_classic() %&gt;%\n    row_spec(12, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 4.4: Top 10 Revenue Sources with CAGRs\n\n\n\n\n\nCAGR Calculations for Largest Revenue Sources\n\n\nRevenue Category\n1 Year CAGR\n2 Year CAGR\n3 Year CAGR\n5 Year CAGR\n10 Year CAGR\n25-Year CAGR\n\n\n\n\nCorporate Income Tax\n4.56\n32.28\n42.32\n24.88\n8.95\n7.16\n\n\nFederal Medicaid Reimbursements\n6.09\n7.28\n13.44\n8.44\n9.32\n7.47\n\n\nFederal Other\n-43.87\n8.68\n3.88\n13.39\n5.67\n4.35\n\n\nFederal Transportation\n15.30\n-5.74\n5.83\n5.82\n2.17\n3.78\n\n\nIncome Tax\n-4.28\n2.74\n8.89\n6.19\n4.35\n5.37\n\n\nLicenses, Fees, Registration\n9.25\n2.24\n13.23\n11.07\n6.18\n7.94\n\n\nMedical Provider Assessments\n9.50\n3.60\n5.58\n13.15\n9.46\n8.41\n\n\nMotor Fuel Taxes\n1.66\n3.82\n3.48\n13.44\n7.39\n2.76\n\n\nReceipts from Revenue Producing\n8.47\n5.70\n5.99\n0.89\n2.69\n5.21\n\n\nSales Tax\n4.84\n8.04\n9.75\n6.67\n4.71\n3.30\n\n\nAll Other Sources **\n14.47\n14.13\n13.76\n6.89\n4.75\n4.30\n\n\nTotal Revenue\n-3.69\n8.35\n11.52\n8.89\n5.88\n5.13\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n###### Yearly change summary table for Top 10 Revenues #####\nrevenue_change_majorcats &lt;- rev_long_majorcats %&gt;%\n  #select(-c(Category)) %&gt;%\n  filter(Year &gt; 2021) %&gt;%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %&gt;%\n  mutate(\n    \"FY 2023 ($ billions)\" = round(Dollars_2023/1000, digits = 1),\n            \"FY 2022 ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n\n         \"1-Year Change\" = percent(((Dollars_2023 -Dollars_2022)/Dollars_2022), accuracy = .1)) %&gt;%\n  left_join(CAGR_revenue_majorcats_tot, by = c(\"Category_name\" = \"Revenue Category\")) %&gt;% \n    arrange(-`FY 2023 ($ billions)`)%&gt;%\n  #select(-c(Dollars_2021, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %&gt;%\n  mutate(\"25-Year Change\" = percent(`25-Year CAGR`/100, accuracy=.1)) %&gt;%\n  rename(\"Revenue Category\" = Category_name ) %&gt;%\n  select(-c(Dollars_2023, Dollars_2022, `1 Year CAGR`:`25-Year CAGR`)) \n\nrevenue_change_majorcats &lt;- move_to_last(revenue_change_majorcats,5)\n\nrevenue_change_majorcats &lt;- move_to_last(revenue_change_majorcats,1)\n\nrevenue_change_majorcats%&gt;% \n  kbl(caption = \"Yearly Change in Revenue for Main Revenue Sources\", row.names = FALSE, align = \"l\") %&gt;% \n   kable_classic() %&gt;%\n    row_spec(12, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 4.5: Top 10 Revenue Sources with CAGRs\n\n\n\n\n\nYearly Change in Revenue for Main Revenue Sources\n\n\nRevenue Category\nFY 2023 ($ billions)\nFY 2022 ($ billions)\n1-Year Change\n25-Year Change\n\n\n\n\nIncome Tax\n25.3\n26.4\n-4.3%\n5.4%\n\n\nFederal Medicaid Reimbursements\n20.2\n19.0\n6.1%\n7.5%\n\n\nSales Tax\n16.2\n15.5\n4.8%\n3.3%\n\n\nFederal Other\n10.9\n19.4\n-43.9%\n4.3%\n\n\nCorporate Income Tax\n10.5\n10.0\n4.6%\n7.2%\n\n\nMedical Provider Assessments\n4.1\n3.7\n9.5%\n8.4%\n\n\nMotor Fuel Taxes\n2.6\n2.5\n1.7%\n2.8%\n\n\nReceipts from Revenue Producing\n2.6\n2.4\n8.5%\n5.2%\n\n\nFederal Transportation\n2.1\n1.8\n15.3%\n3.8%\n\n\nLicenses, Fees, Registration\n2.1\n1.9\n9.2%\n7.9%\n\n\nAll Other Sources **\n15.3\n13.3\n14.5%\n4.3%\n\n\nTotal Revenue\n111.8\n116.1\n-3.7%\n5.1%\n\n\n\n\n\n\n\n\n\n\n\nExport summary file with Totals\n\n\nCode\n#install.packages(\"openxlsx\")\nlibrary(openxlsx)\n\ndataset_names &lt;- list('Aggregate Revenues' = revenue_wide2, \n                      'Aggregate Expenditures' = expenditure_wide2, \n\n                      \n                      'Table 1' = revenue_change_majorcats, #Top categories with yearly change, 23 yr cagr\n                      'Table 2' = expenditure_change_majorcats,\n                      \n                      'Table 1a. AllCats' = revenue_change2,\n                      'Table 2a. AllCats' = expenditure_change2,\n                      \n                      'CAGR Rev-MajorCats' = CAGR_revenue_majorcats_tot, # Categories Match Table 1 in paper\n                      'CAGR Exp-MajorCats' = CAGR_expenditures_majorcats_tot, \n                                            \n                     # 'Table 1-AllCats' = expenditure_change_allcats,  # All Categories by Year\n                    #  'Table 2-AllCats' = revenue_change_allcats,\n                      \n                    #  'CAGR_Revenue-AllCats' = CAGR_revenue_summary_tot, \n                   #   'CAGR_Expenditures-AllCats' = CAGR_expenditures_summary_tot, \n                      \n                      'Fiscal Gap' = year_totals,    # Total Revenue, Expenditure, and Fiscal gap per year\n                      \n                      'aggregated_totals_long' = aggregated_totals_long # all data in long format. Good for creating pivot tables in Excel\n                      )\n\n# write.xlsx(dataset_names, file = 'summary_file_FY23_wTotals_DATE_2023.xlsx')\n\n\nSaves main items in one excel file named summary_file.xlsx. Delete eval=FALSE to run on local computer.",
    "crumbs": [
      "About",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  }
]